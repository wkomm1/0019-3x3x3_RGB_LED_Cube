gplink-1.4.2 #1169 (Jan  2 2016)
Copyright (c) 1998-2015 gputils project
Listing File Generated: 10-9-2016  02:35:36
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.5 #9582 (MINGW64)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2520
                                           	radix	dec
                                           	__config 0x300001, 0x08
                                           	__config 0x300003, 0x1e
                                           	__config 0x300005, 0x03
                                           	__config 0x300006, 0x81
                                           	__config 0x300009, 0xc0
                                           	__config 0x30000b, 0xe0
                                           	__config 0x30000d, 0x40
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_redData
                                           	global	_blueData
                                           	global	_greenData
                                           	global	_i
                                           	global	_j
                                           	global	_k
                                           	global	_l
                                           	global	_pointer
                                           	global	_workingVar
                                           	global	_delay_us
                                           	global	_delay_ms
                                           	global	_allOff
                                           	global	_colorSet
                                           	global	_columbSet
                                           	global	_displayFrame
                                           	global	_renderFrame
                                           	global	_randomPixle
                                           	global	_helixGreen
                                           	global	_rgbUpDown
                                           	global	_usaFlash
                                           	global	_snake
                                           	global	_main
                                           	global	_delaySpeed
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_PWM1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCTLbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_ECCP1DEL
                                           	extern	_PWM1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCTL
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_rand
                                           	extern	__mulint
                                           	extern	__modslong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           r0x0e	res	1
                                           
                                           udata_main_0	udata
                                           _pointer	res	1
                                           
                                           udata_main_1	udata
                                           _i	res	1
                                           
                                           udata_main_2	udata
                                           _j	res	1
                                           
                                           udata_main_3	udata
                                           _redData	res	27
                                           
                                           udata_main_4	udata
                                           _greenData	res	27
                                           
                                           udata_main_5	udata
                                           _blueData	res	27
                                           
                                           udata_main_6	udata
                                           _workingVar	res	4
                                           
                                           udata_main_7	udata
                                           _k	res	1
                                           
                                           udata_main_8	udata
                                           _l	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ;	.line	234; main.c	OSCCON=0x72;
001b5e   0e72     movlw   0x72             	MOVLW	0x72
001b60   6ed3     movwf   0xd3, 0x0        	MOVWF	_OSCCON
                                           ;	.line	235; main.c	TRISA=0x00;
001b62   6a92     clrf    0x92, 0x0        	CLRF	_TRISA
                                           ;	.line	236; main.c	TRISB=0x00;
001b64   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	237; main.c	TRISC=0x00;
001b66   6a94     clrf    0x94, 0x0        	CLRF	_TRISC
                                           ;	.line	239; main.c	allOff();
001b68   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
001b6a   f011
                                           _00440_DS_:
                                           ;	.line	242; main.c	switch(rand()%(5)) {
001b6c   ecc1     call    0x002182, 0x0call    0x002182, 0x0 	CALL	_rand
001b6e   f010
001b70   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001b72   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
001b74   f001
001b76   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
001b78   f002
001b7a   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
001b7c   f003
001b7e   0e00     movlw   0x00             	MOVLW	0x00
001b80   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001b82   0e00     movlw   0x00             	MOVLW	0x00
001b84   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001b86   0e00     movlw   0x00             	MOVLW	0x00
001b88   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001b8a   0e05     movlw   0x05             	MOVLW	0x05
001b8c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001b8e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
001b90   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001b92   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001b94   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001b96   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001b98   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001b9a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001b9c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001b9e   ec4c     call    0x001898, 0x0call    0x001898, 0x0 	CALL	__modslong
001ba0   f00c
001ba2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001ba4   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
001ba6   f001
001ba8   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
001baa   f002
001bac   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
001bae   f003
001bb0   0e08     movlw   0x08             	MOVLW	0x08
001bb2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001bb4   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
001bb6   ae03     btfss   0x03, 0x7, 0x0   	BTFSS	r0x03, 7
001bb8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
001bba   e2d8     bc      0x001b6c         	BC	_00440_DS_
001bbc   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
001bbe   0f80     addlw   0x80             	ADDLW	0x80
001bc0   0f80     addlw   0x80             	ADDLW	0x80
001bc2   e108     bnz     0x001bd4         	BNZ	_00453_DS_
001bc4   0e00     movlw   0x00             	MOVLW	0x00
001bc6   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
001bc8   e105     bnz     0x001bd4         	BNZ	_00453_DS_
001bca   0e00     movlw   0x00             	MOVLW	0x00
001bcc   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
001bce   e102     bnz     0x001bd4         	BNZ	_00453_DS_
001bd0   0e05     movlw   0x05             	MOVLW	0x05
001bd2   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _00453_DS_:
001bd4   e2cb     bc      0x001b6c         	BC	_00440_DS_
001bd6   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
001bd8   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
001bda   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
001bdc   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
001bde   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
001be0   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
001be2   0bfc     andlw   0xfc             	ANDLW	0xfc
001be4   0ff4     addlw   0xf4             	ADDLW	LOW(_00454_DS_)
001be6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001be8   0e1b     movlw   0x1b             	MOVLW	HIGH(_00454_DS_)
001bea   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
001bec   0e00     movlw   0x00             	MOVLW	UPPER(_00454_DS_)
001bee   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
001bf0   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
001bf2   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00454_DS_:
001bf4   ef04     goto    0x001c08         	GOTO	_00433_DS_
001bf6   f00e
001bf8   ef0d     goto    0x001c1a         	GOTO	_00434_DS_
001bfa   f00e
001bfc   ef16     goto    0x001c2c         	GOTO	_00435_DS_
001bfe   f00e
001c00   ef1f     goto    0x001c3e         	GOTO	_00436_DS_
001c02   f00e
001c04   ef28     goto    0x001c50         	GOTO	_00437_DS_
001c06   f00e
                                           _00433_DS_:
                                           ;	.line	243; main.c	case 0: randomPixle(75); break;
001c08   0e00     movlw   0x00             	MOVLW	0x00
001c0a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001c0c   0e4b     movlw   0x4b             	MOVLW	0x4b
001c0e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001c10   ecdc     call    0x0007b8, 0x0call    0x0007b8, 0x0 	CALL	_randomPixle
001c12   f003
001c14   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001c16   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001c18   d7a9     bra     0x001b6c         	BRA	_00440_DS_
                                           _00434_DS_:
                                           ;	.line	244; main.c	case 1: helixGreen(4); break;
001c1a   0e00     movlw   0x00             	MOVLW	0x00
001c1c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001c1e   0e04     movlw   0x04             	MOVLW	0x04
001c20   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001c22   ec1d     call    0x00103a, 0x0call    0x00103a, 0x0 	CALL	_helixGreen
001c24   f008
001c26   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001c28   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001c2a   d7a0     bra     0x001b6c         	BRA	_00440_DS_
                                           _00435_DS_:
                                           ;	.line	245; main.c	case 2: rgbUpDown(2); break;
001c2c   0e00     movlw   0x00             	MOVLW	0x00
001c2e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001c30   0e02     movlw   0x02             	MOVLW	0x02
001c32   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001c34   ec61     call    0x000cc2, 0x0call    0x000cc2, 0x0 	CALL	_rgbUpDown
001c36   f006
001c38   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001c3a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001c3c   d797     bra     0x001b6c         	BRA	_00440_DS_
                                           _00436_DS_:
                                           ;	.line	246; main.c	case 3: usaFlash(6); break;
001c3e   0e00     movlw   0x00             	MOVLW	0x00
001c40   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001c42   0e06     movlw   0x06             	MOVLW	0x06
001c44   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001c46   ec4d     call    0x00209a, 0x0call    0x00209a, 0x0 	CALL	_usaFlash
001c48   f010
001c4a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001c4c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001c4e   d78e     bra     0x001b6c         	BRA	_00440_DS_
                                           _00437_DS_:
                                           ;	.line	247; main.c	case 4: snake(8); break;
001c50   0e08     movlw   0x08             	MOVLW	0x08
001c52   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001c54   ec02     call    0x000004, 0x0call    0x000004, 0x0 	CALL	_snake
001c56   f000
001c58   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	248; main.c	}
001c5a   d788     bra     0x001b6c         	BRA	_00440_DS_
001c5c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__snake	code
                                           _snake:
                                           ;	.line	184; main.c	void snake(char speed) {
000004   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000006   ffe5
000008   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00000a   ffd9
00000c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00000e   ffe5
000010   0e02     movlw   0x02             	MOVLW	0x02
000012   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
000014   f000
                                           ;	.line	185; main.c	renderFrame(0000000001, 0, 0, speed);
000016   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000018   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00001a   0e00     movlw   0x00             	MOVLW	0x00
00001c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00001e   0e00     movlw   0x00             	MOVLW	0x00
000020   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000022   0e00     movlw   0x00             	MOVLW	0x00
000024   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000026   0e00     movlw   0x00             	MOVLW	0x00
000028   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00002a   0e00     movlw   0x00             	MOVLW	0x00
00002c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00002e   0e00     movlw   0x00             	MOVLW	0x00
000030   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000032   0e00     movlw   0x00             	MOVLW	0x00
000034   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000036   0e00     movlw   0x00             	MOVLW	0x00
000038   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00003a   0e00     movlw   0x00             	MOVLW	0x00
00003c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00003e   0e00     movlw   0x00             	MOVLW	0x00
000040   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000042   0e00     movlw   0x00             	MOVLW	0x00
000044   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000046   0e01     movlw   0x01             	MOVLW	0x01
000048   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00004a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00004c   f009
00004e   0e0d     movlw   0x0d             	MOVLW	0x0d
000050   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	186; main.c	renderFrame(0, 0000000003, 0, speed);
000052   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000054   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000056   0e00     movlw   0x00             	MOVLW	0x00
000058   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00005a   0e00     movlw   0x00             	MOVLW	0x00
00005c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00005e   0e00     movlw   0x00             	MOVLW	0x00
000060   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000062   0e00     movlw   0x00             	MOVLW	0x00
000064   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000066   0e00     movlw   0x00             	MOVLW	0x00
000068   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00006a   0e00     movlw   0x00             	MOVLW	0x00
00006c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00006e   0e00     movlw   0x00             	MOVLW	0x00
000070   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000072   0e03     movlw   0x03             	MOVLW	0x03
000074   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000076   0e00     movlw   0x00             	MOVLW	0x00
000078   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00007a   0e00     movlw   0x00             	MOVLW	0x00
00007c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00007e   0e00     movlw   0x00             	MOVLW	0x00
000080   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000082   0e00     movlw   0x00             	MOVLW	0x00
000084   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000086   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000088   f009
00008a   0e0d     movlw   0x0d             	MOVLW	0x0d
00008c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	187; main.c	renderFrame(0000000007, 0, 0000000007, speed);
00008e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000090   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000092   0e00     movlw   0x00             	MOVLW	0x00
000094   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000096   0e00     movlw   0x00             	MOVLW	0x00
000098   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00009a   0e00     movlw   0x00             	MOVLW	0x00
00009c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00009e   0e07     movlw   0x07             	MOVLW	0x07
0000a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000a2   0e00     movlw   0x00             	MOVLW	0x00
0000a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000a6   0e00     movlw   0x00             	MOVLW	0x00
0000a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000aa   0e00     movlw   0x00             	MOVLW	0x00
0000ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000ae   0e00     movlw   0x00             	MOVLW	0x00
0000b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000b2   0e00     movlw   0x00             	MOVLW	0x00
0000b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000b6   0e00     movlw   0x00             	MOVLW	0x00
0000b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000ba   0e00     movlw   0x00             	MOVLW	0x00
0000bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000be   0e07     movlw   0x07             	MOVLW	0x07
0000c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000c2   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0000c4   f009
0000c6   0e0d     movlw   0x0d             	MOVLW	0x0d
0000c8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	189; main.c	renderFrame(0, 0, 0000000047, speed);
0000ca   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0000cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000ce   0e00     movlw   0x00             	MOVLW	0x00
0000d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000d2   0e00     movlw   0x00             	MOVLW	0x00
0000d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000d6   0e00     movlw   0x00             	MOVLW	0x00
0000d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000da   0e27     movlw   0x27             	MOVLW	0x27
0000dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000de   0e00     movlw   0x00             	MOVLW	0x00
0000e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000e2   0e00     movlw   0x00             	MOVLW	0x00
0000e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000e6   0e00     movlw   0x00             	MOVLW	0x00
0000e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000ea   0e00     movlw   0x00             	MOVLW	0x00
0000ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000ee   0e00     movlw   0x00             	MOVLW	0x00
0000f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000f2   0e00     movlw   0x00             	MOVLW	0x00
0000f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000f6   0e00     movlw   0x00             	MOVLW	0x00
0000f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000fa   0e00     movlw   0x00             	MOVLW	0x00
0000fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0000fe   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000100   f009
000102   0e0d     movlw   0x0d             	MOVLW	0x0d
000104   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	190; main.c	renderFrame(0, 0000000067, 0000000067, speed);
000106   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000108   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00010a   0e00     movlw   0x00             	MOVLW	0x00
00010c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00010e   0e00     movlw   0x00             	MOVLW	0x00
000110   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000112   0e00     movlw   0x00             	MOVLW	0x00
000114   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000116   0e37     movlw   0x37             	MOVLW	0x37
000118   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00011a   0e00     movlw   0x00             	MOVLW	0x00
00011c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00011e   0e00     movlw   0x00             	MOVLW	0x00
000120   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000122   0e00     movlw   0x00             	MOVLW	0x00
000124   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000126   0e37     movlw   0x37             	MOVLW	0x37
000128   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00012a   0e00     movlw   0x00             	MOVLW	0x00
00012c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00012e   0e00     movlw   0x00             	MOVLW	0x00
000130   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000132   0e00     movlw   0x00             	MOVLW	0x00
000134   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000136   0e00     movlw   0x00             	MOVLW	0x00
000138   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00013a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00013c   f009
00013e   0e0d     movlw   0x0d             	MOVLW	0x0d
000140   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	191; main.c	renderFrame(0000000077, 0, 0, speed);
000142   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000144   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000146   0e00     movlw   0x00             	MOVLW	0x00
000148   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00014a   0e00     movlw   0x00             	MOVLW	0x00
00014c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00014e   0e00     movlw   0x00             	MOVLW	0x00
000150   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000152   0e00     movlw   0x00             	MOVLW	0x00
000154   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000156   0e00     movlw   0x00             	MOVLW	0x00
000158   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00015a   0e00     movlw   0x00             	MOVLW	0x00
00015c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00015e   0e00     movlw   0x00             	MOVLW	0x00
000160   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000162   0e00     movlw   0x00             	MOVLW	0x00
000164   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000166   0e00     movlw   0x00             	MOVLW	0x00
000168   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00016a   0e00     movlw   0x00             	MOVLW	0x00
00016c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00016e   0e00     movlw   0x00             	MOVLW	0x00
000170   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000172   0e3f     movlw   0x3f             	MOVLW	0x3f
000174   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000176   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000178   f009
00017a   0e0d     movlw   0x0d             	MOVLW	0x0d
00017c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	193; main.c	renderFrame(0000000177, 0000000177, 0, speed);
00017e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000180   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000182   0e00     movlw   0x00             	MOVLW	0x00
000184   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000186   0e00     movlw   0x00             	MOVLW	0x00
000188   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00018a   0e00     movlw   0x00             	MOVLW	0x00
00018c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00018e   0e00     movlw   0x00             	MOVLW	0x00
000190   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000192   0e00     movlw   0x00             	MOVLW	0x00
000194   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000196   0e00     movlw   0x00             	MOVLW	0x00
000198   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00019a   0e00     movlw   0x00             	MOVLW	0x00
00019c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00019e   0e7f     movlw   0x7f             	MOVLW	0x7f
0001a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001a2   0e00     movlw   0x00             	MOVLW	0x00
0001a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001a6   0e00     movlw   0x00             	MOVLW	0x00
0001a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001aa   0e00     movlw   0x00             	MOVLW	0x00
0001ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001ae   0e7f     movlw   0x7f             	MOVLW	0x7f
0001b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001b2   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0001b4   f009
0001b6   0e0d     movlw   0x0d             	MOVLW	0x0d
0001b8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	194; main.c	renderFrame(0, 0, 0000000377, speed);
0001ba   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0001bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001be   0e00     movlw   0x00             	MOVLW	0x00
0001c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001c2   0e00     movlw   0x00             	MOVLW	0x00
0001c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001c6   0e00     movlw   0x00             	MOVLW	0x00
0001c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001ca   0eff     movlw   0xff             	MOVLW	0xff
0001cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001ce   0e00     movlw   0x00             	MOVLW	0x00
0001d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001d2   0e00     movlw   0x00             	MOVLW	0x00
0001d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001d6   0e00     movlw   0x00             	MOVLW	0x00
0001d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001da   0e00     movlw   0x00             	MOVLW	0x00
0001dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001de   0e00     movlw   0x00             	MOVLW	0x00
0001e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001e2   0e00     movlw   0x00             	MOVLW	0x00
0001e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001e6   0e00     movlw   0x00             	MOVLW	0x00
0001e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001ea   0e00     movlw   0x00             	MOVLW	0x00
0001ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001ee   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0001f0   f009
0001f2   0e0d     movlw   0x0d             	MOVLW	0x0d
0001f4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	195; main.c	renderFrame(0000000777, 0, 0000000777, speed);
0001f6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0001f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001fa   0e00     movlw   0x00             	MOVLW	0x00
0001fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0001fe   0e00     movlw   0x00             	MOVLW	0x00
000200   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000202   0e01     movlw   0x01             	MOVLW	0x01
000204   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000206   0eff     movlw   0xff             	MOVLW	0xff
000208   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00020a   0e00     movlw   0x00             	MOVLW	0x00
00020c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00020e   0e00     movlw   0x00             	MOVLW	0x00
000210   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000212   0e00     movlw   0x00             	MOVLW	0x00
000214   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000216   0e00     movlw   0x00             	MOVLW	0x00
000218   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00021a   0e00     movlw   0x00             	MOVLW	0x00
00021c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00021e   0e00     movlw   0x00             	MOVLW	0x00
000220   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000222   0e01     movlw   0x01             	MOVLW	0x01
000224   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000226   0eff     movlw   0xff             	MOVLW	0xff
000228   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00022a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00022c   f009
00022e   0e0d     movlw   0x0d             	MOVLW	0x0d
000230   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	197; main.c	renderFrame(0000400777, 0000400777, 0, speed);
000232   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000234   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000236   0e00     movlw   0x00             	MOVLW	0x00
000238   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00023a   0e00     movlw   0x00             	MOVLW	0x00
00023c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00023e   0e00     movlw   0x00             	MOVLW	0x00
000240   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000242   0e00     movlw   0x00             	MOVLW	0x00
000244   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000246   0e00     movlw   0x00             	MOVLW	0x00
000248   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00024a   0e02     movlw   0x02             	MOVLW	0x02
00024c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00024e   0e01     movlw   0x01             	MOVLW	0x01
000250   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000252   0eff     movlw   0xff             	MOVLW	0xff
000254   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000256   0e00     movlw   0x00             	MOVLW	0x00
000258   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00025a   0e02     movlw   0x02             	MOVLW	0x02
00025c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00025e   0e01     movlw   0x01             	MOVLW	0x01
000260   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000262   0eff     movlw   0xff             	MOVLW	0xff
000264   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000266   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000268   f009
00026a   0e0d     movlw   0x0d             	MOVLW	0x0d
00026c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	198; main.c	renderFrame(0, 0, 0000600777, speed);
00026e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000270   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000272   0e00     movlw   0x00             	MOVLW	0x00
000274   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000276   0e03     movlw   0x03             	MOVLW	0x03
000278   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00027a   0e01     movlw   0x01             	MOVLW	0x01
00027c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00027e   0eff     movlw   0xff             	MOVLW	0xff
000280   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000282   0e00     movlw   0x00             	MOVLW	0x00
000284   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000286   0e00     movlw   0x00             	MOVLW	0x00
000288   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00028a   0e00     movlw   0x00             	MOVLW	0x00
00028c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00028e   0e00     movlw   0x00             	MOVLW	0x00
000290   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000292   0e00     movlw   0x00             	MOVLW	0x00
000294   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000296   0e00     movlw   0x00             	MOVLW	0x00
000298   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00029a   0e00     movlw   0x00             	MOVLW	0x00
00029c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00029e   0e00     movlw   0x00             	MOVLW	0x00
0002a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002a2   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0002a4   f009
0002a6   0e0d     movlw   0x0d             	MOVLW	0x0d
0002a8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	199; main.c	renderFrame(0000700777, 0, 0, speed);
0002aa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0002ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002ae   0e00     movlw   0x00             	MOVLW	0x00
0002b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002b2   0e00     movlw   0x00             	MOVLW	0x00
0002b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002b6   0e00     movlw   0x00             	MOVLW	0x00
0002b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002ba   0e00     movlw   0x00             	MOVLW	0x00
0002bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002be   0e00     movlw   0x00             	MOVLW	0x00
0002c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002c2   0e00     movlw   0x00             	MOVLW	0x00
0002c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002c6   0e00     movlw   0x00             	MOVLW	0x00
0002c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002ca   0e00     movlw   0x00             	MOVLW	0x00
0002cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002ce   0e00     movlw   0x00             	MOVLW	0x00
0002d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002d2   0e03     movlw   0x03             	MOVLW	0x03
0002d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002d6   0e81     movlw   0x81             	MOVLW	0x81
0002d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002da   0eff     movlw   0xff             	MOVLW	0xff
0002dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002de   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0002e0   f009
0002e2   0e0d     movlw   0x0d             	MOVLW	0x0d
0002e4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	201; main.c	renderFrame(0, 0, 0000710777, speed);
0002e6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0002e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002ea   0e00     movlw   0x00             	MOVLW	0x00
0002ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002ee   0e03     movlw   0x03             	MOVLW	0x03
0002f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002f2   0e91     movlw   0x91             	MOVLW	0x91
0002f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002f6   0eff     movlw   0xff             	MOVLW	0xff
0002f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002fa   0e00     movlw   0x00             	MOVLW	0x00
0002fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002fe   0e00     movlw   0x00             	MOVLW	0x00
000300   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000302   0e00     movlw   0x00             	MOVLW	0x00
000304   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000306   0e00     movlw   0x00             	MOVLW	0x00
000308   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00030a   0e00     movlw   0x00             	MOVLW	0x00
00030c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00030e   0e00     movlw   0x00             	MOVLW	0x00
000310   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000312   0e00     movlw   0x00             	MOVLW	0x00
000314   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000316   0e00     movlw   0x00             	MOVLW	0x00
000318   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00031a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00031c   f009
00031e   0e0d     movlw   0x0d             	MOVLW	0x0d
000320   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	202; main.c	renderFrame(0000730777, 0000730777, 0, speed);
000322   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000324   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000326   0e00     movlw   0x00             	MOVLW	0x00
000328   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00032a   0e00     movlw   0x00             	MOVLW	0x00
00032c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00032e   0e00     movlw   0x00             	MOVLW	0x00
000330   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000332   0e00     movlw   0x00             	MOVLW	0x00
000334   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000336   0e00     movlw   0x00             	MOVLW	0x00
000338   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00033a   0e03     movlw   0x03             	MOVLW	0x03
00033c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00033e   0eb1     movlw   0xb1             	MOVLW	0xb1
000340   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000342   0eff     movlw   0xff             	MOVLW	0xff
000344   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000346   0e00     movlw   0x00             	MOVLW	0x00
000348   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00034a   0e03     movlw   0x03             	MOVLW	0x03
00034c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00034e   0eb1     movlw   0xb1             	MOVLW	0xb1
000350   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000352   0eff     movlw   0xff             	MOVLW	0xff
000354   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000356   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000358   f009
00035a   0e0d     movlw   0x0d             	MOVLW	0x0d
00035c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	203; main.c	renderFrame(0, 0, 0000770777, speed);
00035e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000360   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000362   0e00     movlw   0x00             	MOVLW	0x00
000364   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000366   0e03     movlw   0x03             	MOVLW	0x03
000368   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00036a   0ef1     movlw   0xf1             	MOVLW	0xf1
00036c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00036e   0eff     movlw   0xff             	MOVLW	0xff
000370   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000372   0e00     movlw   0x00             	MOVLW	0x00
000374   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000376   0e00     movlw   0x00             	MOVLW	0x00
000378   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00037a   0e00     movlw   0x00             	MOVLW	0x00
00037c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00037e   0e00     movlw   0x00             	MOVLW	0x00
000380   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000382   0e00     movlw   0x00             	MOVLW	0x00
000384   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000386   0e00     movlw   0x00             	MOVLW	0x00
000388   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00038a   0e00     movlw   0x00             	MOVLW	0x00
00038c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00038e   0e00     movlw   0x00             	MOVLW	0x00
000390   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000392   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000394   f009
000396   0e0d     movlw   0x0d             	MOVLW	0x0d
000398   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	205; main.c	renderFrame(0000774777, 0, 0, speed);
00039a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00039c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00039e   0e00     movlw   0x00             	MOVLW	0x00
0003a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003a2   0e00     movlw   0x00             	MOVLW	0x00
0003a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003a6   0e00     movlw   0x00             	MOVLW	0x00
0003a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003aa   0e00     movlw   0x00             	MOVLW	0x00
0003ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003ae   0e00     movlw   0x00             	MOVLW	0x00
0003b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003b2   0e00     movlw   0x00             	MOVLW	0x00
0003b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003b6   0e00     movlw   0x00             	MOVLW	0x00
0003b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003ba   0e00     movlw   0x00             	MOVLW	0x00
0003bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003be   0e00     movlw   0x00             	MOVLW	0x00
0003c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003c2   0e03     movlw   0x03             	MOVLW	0x03
0003c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003c6   0ef9     movlw   0xf9             	MOVLW	0xf9
0003c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003ca   0eff     movlw   0xff             	MOVLW	0xff
0003cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003ce   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0003d0   f009
0003d2   0e0d     movlw   0x0d             	MOVLW	0x0d
0003d4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	206; main.c	renderFrame(0000776777, 0, 0000776777, speed);
0003d6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0003d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003da   0e00     movlw   0x00             	MOVLW	0x00
0003dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003de   0e03     movlw   0x03             	MOVLW	0x03
0003e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003e2   0efd     movlw   0xfd             	MOVLW	0xfd
0003e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003e6   0eff     movlw   0xff             	MOVLW	0xff
0003e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003ea   0e00     movlw   0x00             	MOVLW	0x00
0003ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003ee   0e00     movlw   0x00             	MOVLW	0x00
0003f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003f2   0e00     movlw   0x00             	MOVLW	0x00
0003f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003f6   0e00     movlw   0x00             	MOVLW	0x00
0003f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003fa   0e00     movlw   0x00             	MOVLW	0x00
0003fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003fe   0e03     movlw   0x03             	MOVLW	0x03
000400   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000402   0efd     movlw   0xfd             	MOVLW	0xfd
000404   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000406   0eff     movlw   0xff             	MOVLW	0xff
000408   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00040a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00040c   f009
00040e   0e0d     movlw   0x0d             	MOVLW	0x0d
000410   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	207; main.c	renderFrame(0, 0000777777, 0, speed);
000412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000414   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000416   0e00     movlw   0x00             	MOVLW	0x00
000418   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00041a   0e00     movlw   0x00             	MOVLW	0x00
00041c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00041e   0e00     movlw   0x00             	MOVLW	0x00
000420   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000422   0e00     movlw   0x00             	MOVLW	0x00
000424   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000426   0e00     movlw   0x00             	MOVLW	0x00
000428   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00042a   0e03     movlw   0x03             	MOVLW	0x03
00042c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00042e   0eff     movlw   0xff             	MOVLW	0xff
000430   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000432   0eff     movlw   0xff             	MOVLW	0xff
000434   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000436   0e00     movlw   0x00             	MOVLW	0x00
000438   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00043a   0e00     movlw   0x00             	MOVLW	0x00
00043c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00043e   0e00     movlw   0x00             	MOVLW	0x00
000440   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000442   0e00     movlw   0x00             	MOVLW	0x00
000444   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000446   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000448   f009
00044a   0e0d     movlw   0x0d             	MOVLW	0x0d
00044c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	209; main.c	renderFrame(0, 0, 0001777777, speed);
00044e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000450   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000452   0e00     movlw   0x00             	MOVLW	0x00
000454   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000456   0e07     movlw   0x07             	MOVLW	0x07
000458   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00045a   0eff     movlw   0xff             	MOVLW	0xff
00045c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00045e   0eff     movlw   0xff             	MOVLW	0xff
000460   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000462   0e00     movlw   0x00             	MOVLW	0x00
000464   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000466   0e00     movlw   0x00             	MOVLW	0x00
000468   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00046a   0e00     movlw   0x00             	MOVLW	0x00
00046c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00046e   0e00     movlw   0x00             	MOVLW	0x00
000470   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000472   0e00     movlw   0x00             	MOVLW	0x00
000474   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000476   0e00     movlw   0x00             	MOVLW	0x00
000478   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00047a   0e00     movlw   0x00             	MOVLW	0x00
00047c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00047e   0e00     movlw   0x00             	MOVLW	0x00
000480   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000482   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000484   f009
000486   0e0d     movlw   0x0d             	MOVLW	0x0d
000488   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	210; main.c	renderFrame(0, 0003777777, 0, speed);
00048a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00048c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00048e   0e00     movlw   0x00             	MOVLW	0x00
000490   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000492   0e00     movlw   0x00             	MOVLW	0x00
000494   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000496   0e00     movlw   0x00             	MOVLW	0x00
000498   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00049a   0e00     movlw   0x00             	MOVLW	0x00
00049c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00049e   0e00     movlw   0x00             	MOVLW	0x00
0004a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004a2   0e0f     movlw   0x0f             	MOVLW	0x0f
0004a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004a6   0eff     movlw   0xff             	MOVLW	0xff
0004a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004aa   0eff     movlw   0xff             	MOVLW	0xff
0004ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004ae   0e00     movlw   0x00             	MOVLW	0x00
0004b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004b2   0e00     movlw   0x00             	MOVLW	0x00
0004b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004b6   0e00     movlw   0x00             	MOVLW	0x00
0004b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004ba   0e00     movlw   0x00             	MOVLW	0x00
0004bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004be   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0004c0   f009
0004c2   0e0d     movlw   0x0d             	MOVLW	0x0d
0004c4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	211; main.c	renderFrame(0007777777, 0, 0007777777, speed);
0004c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0004c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004ca   0e00     movlw   0x00             	MOVLW	0x00
0004cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004ce   0e1f     movlw   0x1f             	MOVLW	0x1f
0004d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004d2   0eff     movlw   0xff             	MOVLW	0xff
0004d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004d6   0eff     movlw   0xff             	MOVLW	0xff
0004d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004da   0e00     movlw   0x00             	MOVLW	0x00
0004dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004de   0e00     movlw   0x00             	MOVLW	0x00
0004e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004e2   0e00     movlw   0x00             	MOVLW	0x00
0004e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004e6   0e00     movlw   0x00             	MOVLW	0x00
0004e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004ea   0e00     movlw   0x00             	MOVLW	0x00
0004ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004ee   0e1f     movlw   0x1f             	MOVLW	0x1f
0004f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004f2   0eff     movlw   0xff             	MOVLW	0xff
0004f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004f6   0eff     movlw   0xff             	MOVLW	0xff
0004f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0004fa   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0004fc   f009
0004fe   0e0d     movlw   0x0d             	MOVLW	0x0d
000500   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	213; main.c	renderFrame(0, 0047777777, 0, speed);
000502   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000504   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000506   0e00     movlw   0x00             	MOVLW	0x00
000508   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00050a   0e00     movlw   0x00             	MOVLW	0x00
00050c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00050e   0e00     movlw   0x00             	MOVLW	0x00
000510   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000512   0e00     movlw   0x00             	MOVLW	0x00
000514   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000516   0e00     movlw   0x00             	MOVLW	0x00
000518   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00051a   0e9f     movlw   0x9f             	MOVLW	0x9f
00051c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00051e   0eff     movlw   0xff             	MOVLW	0xff
000520   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000522   0eff     movlw   0xff             	MOVLW	0xff
000524   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000526   0e00     movlw   0x00             	MOVLW	0x00
000528   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00052a   0e00     movlw   0x00             	MOVLW	0x00
00052c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00052e   0e00     movlw   0x00             	MOVLW	0x00
000530   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000532   0e00     movlw   0x00             	MOVLW	0x00
000534   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000536   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000538   f009
00053a   0e0d     movlw   0x0d             	MOVLW	0x0d
00053c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	214; main.c	renderFrame(0, 0, 0067777777, speed);
00053e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000540   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000542   0e00     movlw   0x00             	MOVLW	0x00
000544   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000546   0edf     movlw   0xdf             	MOVLW	0xdf
000548   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00054a   0eff     movlw   0xff             	MOVLW	0xff
00054c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00054e   0eff     movlw   0xff             	MOVLW	0xff
000550   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000552   0e00     movlw   0x00             	MOVLW	0x00
000554   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000556   0e00     movlw   0x00             	MOVLW	0x00
000558   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00055a   0e00     movlw   0x00             	MOVLW	0x00
00055c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00055e   0e00     movlw   0x00             	MOVLW	0x00
000560   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000562   0e00     movlw   0x00             	MOVLW	0x00
000564   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000566   0e00     movlw   0x00             	MOVLW	0x00
000568   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00056a   0e00     movlw   0x00             	MOVLW	0x00
00056c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00056e   0e00     movlw   0x00             	MOVLW	0x00
000570   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000572   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000574   f009
000576   0e0d     movlw   0x0d             	MOVLW	0x0d
000578   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	215; main.c	renderFrame(0077777777, 0, 0077777777, speed);
00057a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00057c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00057e   0e00     movlw   0x00             	MOVLW	0x00
000580   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000582   0eff     movlw   0xff             	MOVLW	0xff
000584   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000586   0eff     movlw   0xff             	MOVLW	0xff
000588   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00058a   0eff     movlw   0xff             	MOVLW	0xff
00058c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00058e   0e00     movlw   0x00             	MOVLW	0x00
000590   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000592   0e00     movlw   0x00             	MOVLW	0x00
000594   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000596   0e00     movlw   0x00             	MOVLW	0x00
000598   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00059a   0e00     movlw   0x00             	MOVLW	0x00
00059c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00059e   0e00     movlw   0x00             	MOVLW	0x00
0005a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005a2   0eff     movlw   0xff             	MOVLW	0xff
0005a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005a6   0eff     movlw   0xff             	MOVLW	0xff
0005a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005aa   0eff     movlw   0xff             	MOVLW	0xff
0005ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005ae   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0005b0   f009
0005b2   0e0d     movlw   0x0d             	MOVLW	0x0d
0005b4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	217; main.c	renderFrame(0177777777, 0, 0177777777, speed);
0005b6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0005b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005ba   0e01     movlw   0x01             	MOVLW	0x01
0005bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005be   0eff     movlw   0xff             	MOVLW	0xff
0005c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005c2   0eff     movlw   0xff             	MOVLW	0xff
0005c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005c6   0eff     movlw   0xff             	MOVLW	0xff
0005c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005ca   0e00     movlw   0x00             	MOVLW	0x00
0005cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005ce   0e00     movlw   0x00             	MOVLW	0x00
0005d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005d2   0e00     movlw   0x00             	MOVLW	0x00
0005d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005d6   0e00     movlw   0x00             	MOVLW	0x00
0005d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005da   0e01     movlw   0x01             	MOVLW	0x01
0005dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005de   0eff     movlw   0xff             	MOVLW	0xff
0005e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005e2   0eff     movlw   0xff             	MOVLW	0xff
0005e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005e6   0eff     movlw   0xff             	MOVLW	0xff
0005e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005ea   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0005ec   f009
0005ee   0e0d     movlw   0x0d             	MOVLW	0x0d
0005f0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	218; main.c	renderFrame(0, 0377777777, 0, speed);
0005f2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0005f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005f6   0e00     movlw   0x00             	MOVLW	0x00
0005f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005fa   0e00     movlw   0x00             	MOVLW	0x00
0005fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005fe   0e00     movlw   0x00             	MOVLW	0x00
000600   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000602   0e00     movlw   0x00             	MOVLW	0x00
000604   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000606   0e03     movlw   0x03             	MOVLW	0x03
000608   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00060a   0eff     movlw   0xff             	MOVLW	0xff
00060c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00060e   0eff     movlw   0xff             	MOVLW	0xff
000610   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000612   0eff     movlw   0xff             	MOVLW	0xff
000614   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000616   0e00     movlw   0x00             	MOVLW	0x00
000618   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00061a   0e00     movlw   0x00             	MOVLW	0x00
00061c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00061e   0e00     movlw   0x00             	MOVLW	0x00
000620   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000622   0e00     movlw   0x00             	MOVLW	0x00
000624   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000626   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000628   f009
00062a   0e0d     movlw   0x0d             	MOVLW	0x0d
00062c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	219; main.c	renderFrame(0, 0, 0777777777, speed);
00062e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000630   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000632   0e07     movlw   0x07             	MOVLW	0x07
000634   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000636   0eff     movlw   0xff             	MOVLW	0xff
000638   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00063a   0eff     movlw   0xff             	MOVLW	0xff
00063c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00063e   0eff     movlw   0xff             	MOVLW	0xff
000640   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000642   0e00     movlw   0x00             	MOVLW	0x00
000644   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000646   0e00     movlw   0x00             	MOVLW	0x00
000648   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00064a   0e00     movlw   0x00             	MOVLW	0x00
00064c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00064e   0e00     movlw   0x00             	MOVLW	0x00
000650   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000652   0e00     movlw   0x00             	MOVLW	0x00
000654   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000656   0e00     movlw   0x00             	MOVLW	0x00
000658   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00065a   0e00     movlw   0x00             	MOVLW	0x00
00065c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00065e   0e00     movlw   0x00             	MOVLW	0x00
000660   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000662   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000664   f009
000666   0e0d     movlw   0x0d             	MOVLW	0x0d
000668   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	221; main.c	allOff();
00066a   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
00066c   f011
                                           ;	.line	223; main.c	renderFrame(0777777777, 0777777777, 0777777777, speed);
00066e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000670   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000672   0e07     movlw   0x07             	MOVLW	0x07
000674   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000676   0eff     movlw   0xff             	MOVLW	0xff
000678   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00067a   0eff     movlw   0xff             	MOVLW	0xff
00067c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00067e   0eff     movlw   0xff             	MOVLW	0xff
000680   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000682   0e07     movlw   0x07             	MOVLW	0x07
000684   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000686   0eff     movlw   0xff             	MOVLW	0xff
000688   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00068a   0eff     movlw   0xff             	MOVLW	0xff
00068c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00068e   0eff     movlw   0xff             	MOVLW	0xff
000690   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000692   0e07     movlw   0x07             	MOVLW	0x07
000694   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000696   0eff     movlw   0xff             	MOVLW	0xff
000698   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00069a   0eff     movlw   0xff             	MOVLW	0xff
00069c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00069e   0eff     movlw   0xff             	MOVLW	0xff
0006a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006a2   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0006a4   f009
0006a6   0e0d     movlw   0x0d             	MOVLW	0x0d
0006a8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	224; main.c	allOff(); delay_ms(100);
0006aa   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
0006ac   f011
0006ae   0e00     movlw   0x00             	MOVLW	0x00
0006b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006b2   0e64     movlw   0x64             	MOVLW	0x64
0006b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006b6   ec95     call    0x00212a, 0x0call    0x00212a, 0x0 	CALL	_delay_ms
0006b8   f010
0006ba   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0006bc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	225; main.c	renderFrame(0777777777, 0777777777, 0777777777, speed);
0006be   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0006c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006c2   0e07     movlw   0x07             	MOVLW	0x07
0006c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006c6   0eff     movlw   0xff             	MOVLW	0xff
0006c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006ca   0eff     movlw   0xff             	MOVLW	0xff
0006cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006ce   0eff     movlw   0xff             	MOVLW	0xff
0006d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006d2   0e07     movlw   0x07             	MOVLW	0x07
0006d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006d6   0eff     movlw   0xff             	MOVLW	0xff
0006d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006da   0eff     movlw   0xff             	MOVLW	0xff
0006dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006de   0eff     movlw   0xff             	MOVLW	0xff
0006e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006e2   0e07     movlw   0x07             	MOVLW	0x07
0006e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006e6   0eff     movlw   0xff             	MOVLW	0xff
0006e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006ea   0eff     movlw   0xff             	MOVLW	0xff
0006ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006ee   0eff     movlw   0xff             	MOVLW	0xff
0006f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0006f2   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0006f4   f009
0006f6   0e0d     movlw   0x0d             	MOVLW	0x0d
0006f8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	226; main.c	allOff(); delay_ms(100);
0006fa   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
0006fc   f011
0006fe   0e00     movlw   0x00             	MOVLW	0x00
000700   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000702   0e64     movlw   0x64             	MOVLW	0x64
000704   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000706   ec95     call    0x00212a, 0x0call    0x00212a, 0x0 	CALL	_delay_ms
000708   f010
00070a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00070c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	227; main.c	renderFrame(0777777777, 0777777777, 0777777777, speed);
00070e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000710   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000712   0e07     movlw   0x07             	MOVLW	0x07
000714   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000716   0eff     movlw   0xff             	MOVLW	0xff
000718   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00071a   0eff     movlw   0xff             	MOVLW	0xff
00071c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00071e   0eff     movlw   0xff             	MOVLW	0xff
000720   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000722   0e07     movlw   0x07             	MOVLW	0x07
000724   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000726   0eff     movlw   0xff             	MOVLW	0xff
000728   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00072a   0eff     movlw   0xff             	MOVLW	0xff
00072c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00072e   0eff     movlw   0xff             	MOVLW	0xff
000730   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000732   0e07     movlw   0x07             	MOVLW	0x07
000734   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000736   0eff     movlw   0xff             	MOVLW	0xff
000738   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00073a   0eff     movlw   0xff             	MOVLW	0xff
00073c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00073e   0eff     movlw   0xff             	MOVLW	0xff
000740   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000742   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000744   f009
000746   0e0d     movlw   0x0d             	MOVLW	0x0d
000748   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	228; main.c	allOff(); delay_ms(100);
00074a   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
00074c   f011
00074e   0e00     movlw   0x00             	MOVLW	0x00
000750   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000752   0e64     movlw   0x64             	MOVLW	0x64
000754   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000756   ec95     call    0x00212a, 0x0call    0x00212a, 0x0 	CALL	_delay_ms
000758   f010
00075a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00075c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	229; main.c	renderFrame(0777777777, 0777777777, 0777777777, speed);
00075e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000760   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000762   0e07     movlw   0x07             	MOVLW	0x07
000764   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000766   0eff     movlw   0xff             	MOVLW	0xff
000768   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00076a   0eff     movlw   0xff             	MOVLW	0xff
00076c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00076e   0eff     movlw   0xff             	MOVLW	0xff
000770   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000772   0e07     movlw   0x07             	MOVLW	0x07
000774   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000776   0eff     movlw   0xff             	MOVLW	0xff
000778   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00077a   0eff     movlw   0xff             	MOVLW	0xff
00077c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00077e   0eff     movlw   0xff             	MOVLW	0xff
000780   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000782   0e07     movlw   0x07             	MOVLW	0x07
000784   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000786   0eff     movlw   0xff             	MOVLW	0xff
000788   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00078a   0eff     movlw   0xff             	MOVLW	0xff
00078c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00078e   0eff     movlw   0xff             	MOVLW	0xff
000790   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000792   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000794   f009
000796   0e0d     movlw   0x0d             	MOVLW	0x0d
000798   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	230; main.c	allOff(); delay_ms(100);
00079a   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
00079c   f011
00079e   0e00     movlw   0x00             	MOVLW	0x00
0007a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0007a2   0e64     movlw   0x64             	MOVLW	0x64
0007a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0007a6   ec95     call    0x00212a, 0x0call    0x00212a, 0x0 	CALL	_delay_ms
0007a8   f010
0007aa   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0007ac   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0007ae   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0007b0   f000
0007b2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0007b4   ffd9
0007b6   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__usaFlash	code
                                           _usaFlash:
                                           ;	.line	176; main.c	void usaFlash(int count) {
00209a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00209c   ffe5
00209e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0020a0   ffd9
0020a2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0020a4   ffe5
0020a6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0020a8   ffe5
0020aa   0e02     movlw   0x02             	MOVLW	0x02
0020ac   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0020ae   f000
0020b0   0e03     movlw   0x03             	MOVLW	0x03
0020b2   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0020b4   f001
                                           _00411_DS_:
                                           ;	.line	177; main.c	while(count>0) {  //red white and blue
0020b6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0020b8   0f80     addlw   0x80             	ADDLW	0x80
0020ba   0f80     addlw   0x80             	ADDLW	0x80
0020bc   e102     bnz     0x0020c2         	BNZ	_00423_DS_
0020be   0e01     movlw   0x01             	MOVLW	0x01
0020c0   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _00423_DS_:
0020c2   e32c     bnc     0x00211c         	BNC	_00414_DS_
                                           ;	.line	178; main.c	renderFrame(0000777777, 0000777000, 0777777000, 20); allOff();
0020c4   0e14     movlw   0x14             	MOVLW	0x14
0020c6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020c8   0e07     movlw   0x07             	MOVLW	0x07
0020ca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020cc   0eff     movlw   0xff             	MOVLW	0xff
0020ce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020d0   0efe     movlw   0xfe             	MOVLW	0xfe
0020d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020d4   0e00     movlw   0x00             	MOVLW	0x00
0020d6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020d8   0e00     movlw   0x00             	MOVLW	0x00
0020da   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020dc   0e03     movlw   0x03             	MOVLW	0x03
0020de   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020e0   0efe     movlw   0xfe             	MOVLW	0xfe
0020e2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020e4   0e00     movlw   0x00             	MOVLW	0x00
0020e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020e8   0e00     movlw   0x00             	MOVLW	0x00
0020ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020ec   0e03     movlw   0x03             	MOVLW	0x03
0020ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020f0   0eff     movlw   0xff             	MOVLW	0xff
0020f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020f4   0eff     movlw   0xff             	MOVLW	0xff
0020f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020f8   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0020fa   f009
0020fc   0e0d     movlw   0x0d             	MOVLW	0x0d
0020fe   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002100   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
002102   f011
                                           ;	.line	179; main.c	delay_ms(250);
002104   0e00     movlw   0x00             	MOVLW	0x00
002106   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002108   0efa     movlw   0xfa             	MOVLW	0xfa
00210a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00210c   ec95     call    0x00212a, 0x0call    0x00212a, 0x0 	CALL	_delay_ms
00210e   f010
002110   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002112   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	180; main.c	count--;
002114   0eff     movlw   0xff             	MOVLW	0xff
002116   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002118   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00211a   d7cd     bra     0x0020b6         	BRA	_00411_DS_
                                           _00414_DS_:
00211c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00211e   f001
002120   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002122   f000
002124   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002126   ffd9
002128   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__rgbUpDown	code
                                           _rgbUpDown:
                                           ;	.line	152; main.c	void rgbUpDown(int count) {
000cc2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000cc4   ffe5
000cc6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000cc8   ffd9
000cca   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000ccc   ffe5
000cce   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000cd0   ffe5
000cd2   0e02     movlw   0x02             	MOVLW	0x02
000cd4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
000cd6   f000
000cd8   0e03     movlw   0x03             	MOVLW	0x03
000cda   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
000cdc   f001
                                           _00367_DS_:
                                           ;	.line	153; main.c	while(count>0) {  //up down rgb
000cde   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000ce0   0f80     addlw   0x80             	ADDLW	0x80
000ce2   0f80     addlw   0x80             	ADDLW	0x80
000ce4   e102     bnz     0x000cea         	BNZ	_00403_DS_
000ce6   0e01     movlw   0x01             	MOVLW	0x01
000ce8   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _00403_DS_:
000cea   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
000cec   d19f     bra     0x00102c         	BRA	_00376_DS_
000cee   0100     movlb   0x0              	BANKSEL	_l
                                           ;	.line	154; main.c	for(l = 0; l < 2; l++) {
000cf0   6bfc     clrf    0xfc, 0x1        	CLRF	_l, B
                                           _00370_DS_:
                                           ;	.line	155; main.c	renderFrame(0000000777, 0, 0, 8); allOff();  //uses 36 Byte of ROM
000cf2   0e08     movlw   0x08             	MOVLW	0x08
000cf4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000cf6   0e00     movlw   0x00             	MOVLW	0x00
000cf8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000cfa   0e00     movlw   0x00             	MOVLW	0x00
000cfc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000cfe   0e00     movlw   0x00             	MOVLW	0x00
000d00   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d02   0e00     movlw   0x00             	MOVLW	0x00
000d04   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d06   0e00     movlw   0x00             	MOVLW	0x00
000d08   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d0a   0e00     movlw   0x00             	MOVLW	0x00
000d0c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d0e   0e00     movlw   0x00             	MOVLW	0x00
000d10   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d12   0e00     movlw   0x00             	MOVLW	0x00
000d14   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d16   0e00     movlw   0x00             	MOVLW	0x00
000d18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d1a   0e00     movlw   0x00             	MOVLW	0x00
000d1c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d1e   0e01     movlw   0x01             	MOVLW	0x01
000d20   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d22   0eff     movlw   0xff             	MOVLW	0xff
000d24   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d26   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000d28   f009
000d2a   0e0d     movlw   0x0d             	MOVLW	0x0d
000d2c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000d2e   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000d30   f011
                                           ;	.line	156; main.c	renderFrame(0000777000, 0, 0, 8); allOff();
000d32   0e08     movlw   0x08             	MOVLW	0x08
000d34   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d36   0e00     movlw   0x00             	MOVLW	0x00
000d38   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d3a   0e00     movlw   0x00             	MOVLW	0x00
000d3c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d3e   0e00     movlw   0x00             	MOVLW	0x00
000d40   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d42   0e00     movlw   0x00             	MOVLW	0x00
000d44   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d46   0e00     movlw   0x00             	MOVLW	0x00
000d48   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d4a   0e00     movlw   0x00             	MOVLW	0x00
000d4c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d4e   0e00     movlw   0x00             	MOVLW	0x00
000d50   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d52   0e00     movlw   0x00             	MOVLW	0x00
000d54   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d56   0e00     movlw   0x00             	MOVLW	0x00
000d58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d5a   0e03     movlw   0x03             	MOVLW	0x03
000d5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d5e   0efe     movlw   0xfe             	MOVLW	0xfe
000d60   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d62   0e00     movlw   0x00             	MOVLW	0x00
000d64   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d66   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000d68   f009
000d6a   0e0d     movlw   0x0d             	MOVLW	0x0d
000d6c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000d6e   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000d70   f011
                                           ;	.line	157; main.c	renderFrame(0777000000, 0, 0, 8); allOff();
000d72   0e08     movlw   0x08             	MOVLW	0x08
000d74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d76   0e00     movlw   0x00             	MOVLW	0x00
000d78   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d7a   0e00     movlw   0x00             	MOVLW	0x00
000d7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d7e   0e00     movlw   0x00             	MOVLW	0x00
000d80   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d82   0e00     movlw   0x00             	MOVLW	0x00
000d84   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d86   0e00     movlw   0x00             	MOVLW	0x00
000d88   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d8a   0e00     movlw   0x00             	MOVLW	0x00
000d8c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d8e   0e00     movlw   0x00             	MOVLW	0x00
000d90   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d92   0e00     movlw   0x00             	MOVLW	0x00
000d94   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d96   0e07     movlw   0x07             	MOVLW	0x07
000d98   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d9a   0efc     movlw   0xfc             	MOVLW	0xfc
000d9c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000d9e   0e00     movlw   0x00             	MOVLW	0x00
000da0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000da2   0e00     movlw   0x00             	MOVLW	0x00
000da4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000da6   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000da8   f009
000daa   0e0d     movlw   0x0d             	MOVLW	0x0d
000dac   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000dae   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000db0   f011
                                           ;	.line	158; main.c	renderFrame(0000777000, 0, 0, 8); allOff();
000db2   0e08     movlw   0x08             	MOVLW	0x08
000db4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000db6   0e00     movlw   0x00             	MOVLW	0x00
000db8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000dba   0e00     movlw   0x00             	MOVLW	0x00
000dbc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000dbe   0e00     movlw   0x00             	MOVLW	0x00
000dc0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000dc2   0e00     movlw   0x00             	MOVLW	0x00
000dc4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000dc6   0e00     movlw   0x00             	MOVLW	0x00
000dc8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000dca   0e00     movlw   0x00             	MOVLW	0x00
000dcc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000dce   0e00     movlw   0x00             	MOVLW	0x00
000dd0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000dd2   0e00     movlw   0x00             	MOVLW	0x00
000dd4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000dd6   0e00     movlw   0x00             	MOVLW	0x00
000dd8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000dda   0e03     movlw   0x03             	MOVLW	0x03
000ddc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000dde   0efe     movlw   0xfe             	MOVLW	0xfe
000de0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000de2   0e00     movlw   0x00             	MOVLW	0x00
000de4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000de6   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000de8   f009
000dea   0e0d     movlw   0x0d             	MOVLW	0x0d
000dec   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000dee   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000df0   f011
000df2   0100     movlb   0x0              	BANKSEL	_l
                                           ;	.line	154; main.c	for(l = 0; l < 2; l++) {
000df4   2bfc     incf    0xfc, 0x1, 0x1   	INCF	_l, F, B
000df6   0e02     movlw   0x02             	MOVLW	0x02
000df8   0100     movlb   0x0              	BANKSEL	_l
000dfa   5dfc     subwf   0xfc, 0x0, 0x1   	SUBWF	_l, W, B
000dfc   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
000dfe   d779     bra     0x000cf2         	BRA	_00370_DS_
000e00   0100     movlb   0x0              	BANKSEL	_l
                                           ;	.line	160; main.c	for(l = 0; l < 2; l++) {
000e02   6bfc     clrf    0xfc, 0x1        	CLRF	_l, B
                                           _00372_DS_:
                                           ;	.line	161; main.c	renderFrame(0, 0000000777, 0, 8); allOff();
000e04   0e08     movlw   0x08             	MOVLW	0x08
000e06   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e08   0e00     movlw   0x00             	MOVLW	0x00
000e0a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e0c   0e00     movlw   0x00             	MOVLW	0x00
000e0e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e10   0e00     movlw   0x00             	MOVLW	0x00
000e12   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e14   0e00     movlw   0x00             	MOVLW	0x00
000e16   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e18   0e00     movlw   0x00             	MOVLW	0x00
000e1a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e1c   0e00     movlw   0x00             	MOVLW	0x00
000e1e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e20   0e01     movlw   0x01             	MOVLW	0x01
000e22   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e24   0eff     movlw   0xff             	MOVLW	0xff
000e26   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e28   0e00     movlw   0x00             	MOVLW	0x00
000e2a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e2c   0e00     movlw   0x00             	MOVLW	0x00
000e2e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e30   0e00     movlw   0x00             	MOVLW	0x00
000e32   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e34   0e00     movlw   0x00             	MOVLW	0x00
000e36   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e38   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000e3a   f009
000e3c   0e0d     movlw   0x0d             	MOVLW	0x0d
000e3e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000e40   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000e42   f011
                                           ;	.line	162; main.c	renderFrame(0, 0000777000, 0, 8); allOff();
000e44   0e08     movlw   0x08             	MOVLW	0x08
000e46   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e48   0e00     movlw   0x00             	MOVLW	0x00
000e4a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e4c   0e00     movlw   0x00             	MOVLW	0x00
000e4e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e50   0e00     movlw   0x00             	MOVLW	0x00
000e52   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e54   0e00     movlw   0x00             	MOVLW	0x00
000e56   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e58   0e00     movlw   0x00             	MOVLW	0x00
000e5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e5c   0e03     movlw   0x03             	MOVLW	0x03
000e5e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e60   0efe     movlw   0xfe             	MOVLW	0xfe
000e62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e64   0e00     movlw   0x00             	MOVLW	0x00
000e66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e68   0e00     movlw   0x00             	MOVLW	0x00
000e6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e6c   0e00     movlw   0x00             	MOVLW	0x00
000e6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e70   0e00     movlw   0x00             	MOVLW	0x00
000e72   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e74   0e00     movlw   0x00             	MOVLW	0x00
000e76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e78   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000e7a   f009
000e7c   0e0d     movlw   0x0d             	MOVLW	0x0d
000e7e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000e80   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000e82   f011
                                           ;	.line	163; main.c	renderFrame(0, 0777000000, 0, 8); allOff();
000e84   0e08     movlw   0x08             	MOVLW	0x08
000e86   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e88   0e00     movlw   0x00             	MOVLW	0x00
000e8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e8c   0e00     movlw   0x00             	MOVLW	0x00
000e8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e90   0e00     movlw   0x00             	MOVLW	0x00
000e92   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e94   0e00     movlw   0x00             	MOVLW	0x00
000e96   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e98   0e07     movlw   0x07             	MOVLW	0x07
000e9a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000e9c   0efc     movlw   0xfc             	MOVLW	0xfc
000e9e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ea0   0e00     movlw   0x00             	MOVLW	0x00
000ea2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ea4   0e00     movlw   0x00             	MOVLW	0x00
000ea6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ea8   0e00     movlw   0x00             	MOVLW	0x00
000eaa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000eac   0e00     movlw   0x00             	MOVLW	0x00
000eae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000eb0   0e00     movlw   0x00             	MOVLW	0x00
000eb2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000eb4   0e00     movlw   0x00             	MOVLW	0x00
000eb6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000eb8   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000eba   f009
000ebc   0e0d     movlw   0x0d             	MOVLW	0x0d
000ebe   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000ec0   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000ec2   f011
                                           ;	.line	164; main.c	renderFrame(0, 0000777000, 0, 8); allOff();
000ec4   0e08     movlw   0x08             	MOVLW	0x08
000ec6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ec8   0e00     movlw   0x00             	MOVLW	0x00
000eca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ecc   0e00     movlw   0x00             	MOVLW	0x00
000ece   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ed0   0e00     movlw   0x00             	MOVLW	0x00
000ed2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ed4   0e00     movlw   0x00             	MOVLW	0x00
000ed6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ed8   0e00     movlw   0x00             	MOVLW	0x00
000eda   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000edc   0e03     movlw   0x03             	MOVLW	0x03
000ede   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ee0   0efe     movlw   0xfe             	MOVLW	0xfe
000ee2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ee4   0e00     movlw   0x00             	MOVLW	0x00
000ee6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ee8   0e00     movlw   0x00             	MOVLW	0x00
000eea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000eec   0e00     movlw   0x00             	MOVLW	0x00
000eee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ef0   0e00     movlw   0x00             	MOVLW	0x00
000ef2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ef4   0e00     movlw   0x00             	MOVLW	0x00
000ef6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ef8   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000efa   f009
000efc   0e0d     movlw   0x0d             	MOVLW	0x0d
000efe   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000f00   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000f02   f011
000f04   0100     movlb   0x0              	BANKSEL	_l
                                           ;	.line	160; main.c	for(l = 0; l < 2; l++) {
000f06   2bfc     incf    0xfc, 0x1, 0x1   	INCF	_l, F, B
000f08   0e02     movlw   0x02             	MOVLW	0x02
000f0a   0100     movlb   0x0              	BANKSEL	_l
000f0c   5dfc     subwf   0xfc, 0x0, 0x1   	SUBWF	_l, W, B
000f0e   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
000f10   d779     bra     0x000e04         	BRA	_00372_DS_
000f12   0100     movlb   0x0              	BANKSEL	_l
                                           ;	.line	166; main.c	for(l = 0; l < 2; l++) {
000f14   6bfc     clrf    0xfc, 0x1        	CLRF	_l, B
                                           _00374_DS_:
                                           ;	.line	167; main.c	renderFrame(0, 0, 0000000777, 8); allOff();
000f16   0e08     movlw   0x08             	MOVLW	0x08
000f18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f1a   0e00     movlw   0x00             	MOVLW	0x00
000f1c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f1e   0e00     movlw   0x00             	MOVLW	0x00
000f20   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f22   0e01     movlw   0x01             	MOVLW	0x01
000f24   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f26   0eff     movlw   0xff             	MOVLW	0xff
000f28   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f2a   0e00     movlw   0x00             	MOVLW	0x00
000f2c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f2e   0e00     movlw   0x00             	MOVLW	0x00
000f30   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f32   0e00     movlw   0x00             	MOVLW	0x00
000f34   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f36   0e00     movlw   0x00             	MOVLW	0x00
000f38   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f3a   0e00     movlw   0x00             	MOVLW	0x00
000f3c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f3e   0e00     movlw   0x00             	MOVLW	0x00
000f40   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f42   0e00     movlw   0x00             	MOVLW	0x00
000f44   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f46   0e00     movlw   0x00             	MOVLW	0x00
000f48   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f4a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000f4c   f009
000f4e   0e0d     movlw   0x0d             	MOVLW	0x0d
000f50   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000f52   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000f54   f011
                                           ;	.line	168; main.c	renderFrame(0, 0, 0000777000, 8); allOff();
000f56   0e08     movlw   0x08             	MOVLW	0x08
000f58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f5a   0e00     movlw   0x00             	MOVLW	0x00
000f5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f5e   0e03     movlw   0x03             	MOVLW	0x03
000f60   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f62   0efe     movlw   0xfe             	MOVLW	0xfe
000f64   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f66   0e00     movlw   0x00             	MOVLW	0x00
000f68   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f6a   0e00     movlw   0x00             	MOVLW	0x00
000f6c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f6e   0e00     movlw   0x00             	MOVLW	0x00
000f70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f72   0e00     movlw   0x00             	MOVLW	0x00
000f74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f76   0e00     movlw   0x00             	MOVLW	0x00
000f78   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f7a   0e00     movlw   0x00             	MOVLW	0x00
000f7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f7e   0e00     movlw   0x00             	MOVLW	0x00
000f80   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f82   0e00     movlw   0x00             	MOVLW	0x00
000f84   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f86   0e00     movlw   0x00             	MOVLW	0x00
000f88   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f8a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000f8c   f009
000f8e   0e0d     movlw   0x0d             	MOVLW	0x0d
000f90   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000f92   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000f94   f011
                                           ;	.line	169; main.c	renderFrame(0, 0, 0777000000, 8); allOff();
000f96   0e08     movlw   0x08             	MOVLW	0x08
000f98   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f9a   0e07     movlw   0x07             	MOVLW	0x07
000f9c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000f9e   0efc     movlw   0xfc             	MOVLW	0xfc
000fa0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fa2   0e00     movlw   0x00             	MOVLW	0x00
000fa4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fa6   0e00     movlw   0x00             	MOVLW	0x00
000fa8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000faa   0e00     movlw   0x00             	MOVLW	0x00
000fac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fae   0e00     movlw   0x00             	MOVLW	0x00
000fb0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fb2   0e00     movlw   0x00             	MOVLW	0x00
000fb4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fb6   0e00     movlw   0x00             	MOVLW	0x00
000fb8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fba   0e00     movlw   0x00             	MOVLW	0x00
000fbc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fbe   0e00     movlw   0x00             	MOVLW	0x00
000fc0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fc2   0e00     movlw   0x00             	MOVLW	0x00
000fc4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fc6   0e00     movlw   0x00             	MOVLW	0x00
000fc8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fca   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000fcc   f009
000fce   0e0d     movlw   0x0d             	MOVLW	0x0d
000fd0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000fd2   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000fd4   f011
                                           ;	.line	170; main.c	renderFrame(0, 0, 0000777000, 8); allOff();
000fd6   0e08     movlw   0x08             	MOVLW	0x08
000fd8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fda   0e00     movlw   0x00             	MOVLW	0x00
000fdc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fde   0e03     movlw   0x03             	MOVLW	0x03
000fe0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fe2   0efe     movlw   0xfe             	MOVLW	0xfe
000fe4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fe6   0e00     movlw   0x00             	MOVLW	0x00
000fe8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fea   0e00     movlw   0x00             	MOVLW	0x00
000fec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fee   0e00     movlw   0x00             	MOVLW	0x00
000ff0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ff2   0e00     movlw   0x00             	MOVLW	0x00
000ff4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ff6   0e00     movlw   0x00             	MOVLW	0x00
000ff8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ffa   0e00     movlw   0x00             	MOVLW	0x00
000ffc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ffe   0e00     movlw   0x00             	MOVLW	0x00
001000   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001002   0e00     movlw   0x00             	MOVLW	0x00
001004   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001006   0e00     movlw   0x00             	MOVLW	0x00
001008   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00100a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00100c   f009
00100e   0e0d     movlw   0x0d             	MOVLW	0x0d
001010   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001012   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
001014   f011
001016   0100     movlb   0x0              	BANKSEL	_l
                                           ;	.line	166; main.c	for(l = 0; l < 2; l++) {
001018   2bfc     incf    0xfc, 0x1, 0x1   	INCF	_l, F, B
00101a   0e02     movlw   0x02             	MOVLW	0x02
00101c   0100     movlb   0x0              	BANKSEL	_l
00101e   5dfc     subwf   0xfc, 0x0, 0x1   	SUBWF	_l, W, B
001020   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
001022   d779     bra     0x000f16         	BRA	_00374_DS_
                                           ;	.line	172; main.c	count--;
001024   0eff     movlw   0xff             	MOVLW	0xff
001026   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001028   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00102a   d659     bra     0x000cde         	BRA	_00367_DS_
                                           _00376_DS_:
00102c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00102e   f001
001030   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001032   f000
001034   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001036   ffd9
001038   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__helixGreen	code
                                           _helixGreen:
                                           ;	.line	138; main.c	void helixGreen(int count) {
00103a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00103c   ffe5
00103e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001040   ffd9
001042   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001044   ffe5
001046   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001048   ffe5
00104a   0e02     movlw   0x02             	MOVLW	0x02
00104c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00104e   f000
001050   0e03     movlw   0x03             	MOVLW	0x03
001052   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
001054   f001
                                           _00347_DS_:
                                           ;	.line	139; main.c	while(count>0) {  //helix green
001056   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001058   0f80     addlw   0x80             	ADDLW	0x80
00105a   0f80     addlw   0x80             	ADDLW	0x80
00105c   e102     bnz     0x001062         	BNZ	_00359_DS_
00105e   0e01     movlw   0x01             	MOVLW	0x01
001060   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _00359_DS_:
001062   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
001064   d104     bra     0x00126e         	BRA	_00350_DS_
                                           ;	.line	140; main.c	renderFrame(0, 0100200400, 0, 8); allOff();
001066   0e08     movlw   0x08             	MOVLW	0x08
001068   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00106a   0e00     movlw   0x00             	MOVLW	0x00
00106c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00106e   0e00     movlw   0x00             	MOVLW	0x00
001070   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001072   0e00     movlw   0x00             	MOVLW	0x00
001074   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001076   0e00     movlw   0x00             	MOVLW	0x00
001078   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00107a   0e01     movlw   0x01             	MOVLW	0x01
00107c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00107e   0e01     movlw   0x01             	MOVLW	0x01
001080   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001082   0e01     movlw   0x01             	MOVLW	0x01
001084   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001086   0e00     movlw   0x00             	MOVLW	0x00
001088   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00108a   0e00     movlw   0x00             	MOVLW	0x00
00108c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00108e   0e00     movlw   0x00             	MOVLW	0x00
001090   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001092   0e00     movlw   0x00             	MOVLW	0x00
001094   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001096   0e00     movlw   0x00             	MOVLW	0x00
001098   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00109a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00109c   f009
00109e   0e0d     movlw   0x0d             	MOVLW	0x0d
0010a0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0010a2   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
0010a4   f011
                                           ;	.line	141; main.c	renderFrame(0, 0010100200, 0, 8); allOff();
0010a6   0e08     movlw   0x08             	MOVLW	0x08
0010a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010aa   0e00     movlw   0x00             	MOVLW	0x00
0010ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010ae   0e00     movlw   0x00             	MOVLW	0x00
0010b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010b2   0e00     movlw   0x00             	MOVLW	0x00
0010b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010b6   0e00     movlw   0x00             	MOVLW	0x00
0010b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010ba   0e00     movlw   0x00             	MOVLW	0x00
0010bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010be   0e20     movlw   0x20             	MOVLW	0x20
0010c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010c2   0e80     movlw   0x80             	MOVLW	0x80
0010c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010c6   0e80     movlw   0x80             	MOVLW	0x80
0010c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010ca   0e00     movlw   0x00             	MOVLW	0x00
0010cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010ce   0e00     movlw   0x00             	MOVLW	0x00
0010d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010d2   0e00     movlw   0x00             	MOVLW	0x00
0010d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010d6   0e00     movlw   0x00             	MOVLW	0x00
0010d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010da   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0010dc   f009
0010de   0e0d     movlw   0x0d             	MOVLW	0x0d
0010e0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0010e2   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
0010e4   f011
                                           ;	.line	142; main.c	renderFrame(0, 0001010100, 0, 8); allOff();
0010e6   0e08     movlw   0x08             	MOVLW	0x08
0010e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010ea   0e00     movlw   0x00             	MOVLW	0x00
0010ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010ee   0e00     movlw   0x00             	MOVLW	0x00
0010f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010f2   0e00     movlw   0x00             	MOVLW	0x00
0010f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010f6   0e00     movlw   0x00             	MOVLW	0x00
0010f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010fa   0e00     movlw   0x00             	MOVLW	0x00
0010fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0010fe   0e04     movlw   0x04             	MOVLW	0x04
001100   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001102   0e10     movlw   0x10             	MOVLW	0x10
001104   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001106   0e40     movlw   0x40             	MOVLW	0x40
001108   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00110a   0e00     movlw   0x00             	MOVLW	0x00
00110c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00110e   0e00     movlw   0x00             	MOVLW	0x00
001110   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001112   0e00     movlw   0x00             	MOVLW	0x00
001114   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001116   0e00     movlw   0x00             	MOVLW	0x00
001118   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00111a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00111c   f009
00111e   0e0d     movlw   0x0d             	MOVLW	0x0d
001120   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001122   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
001124   f011
                                           ;	.line	143; main.c	renderFrame(0, 0002001010, 0, 8); allOff();
001126   0e08     movlw   0x08             	MOVLW	0x08
001128   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00112a   0e00     movlw   0x00             	MOVLW	0x00
00112c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00112e   0e00     movlw   0x00             	MOVLW	0x00
001130   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001132   0e00     movlw   0x00             	MOVLW	0x00
001134   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001136   0e00     movlw   0x00             	MOVLW	0x00
001138   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00113a   0e00     movlw   0x00             	MOVLW	0x00
00113c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00113e   0e08     movlw   0x08             	MOVLW	0x08
001140   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001142   0e02     movlw   0x02             	MOVLW	0x02
001144   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001146   0e08     movlw   0x08             	MOVLW	0x08
001148   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00114a   0e00     movlw   0x00             	MOVLW	0x00
00114c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00114e   0e00     movlw   0x00             	MOVLW	0x00
001150   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001152   0e00     movlw   0x00             	MOVLW	0x00
001154   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001156   0e00     movlw   0x00             	MOVLW	0x00
001158   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00115a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00115c   f009
00115e   0e0d     movlw   0x0d             	MOVLW	0x0d
001160   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001162   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
001164   f011
                                           ;	.line	144; main.c	renderFrame(0, 0004002001, 0, 8); allOff();
001166   0e08     movlw   0x08             	MOVLW	0x08
001168   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00116a   0e00     movlw   0x00             	MOVLW	0x00
00116c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00116e   0e00     movlw   0x00             	MOVLW	0x00
001170   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001172   0e00     movlw   0x00             	MOVLW	0x00
001174   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001176   0e00     movlw   0x00             	MOVLW	0x00
001178   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00117a   0e00     movlw   0x00             	MOVLW	0x00
00117c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00117e   0e10     movlw   0x10             	MOVLW	0x10
001180   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001182   0e04     movlw   0x04             	MOVLW	0x04
001184   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001186   0e01     movlw   0x01             	MOVLW	0x01
001188   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00118a   0e00     movlw   0x00             	MOVLW	0x00
00118c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00118e   0e00     movlw   0x00             	MOVLW	0x00
001190   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001192   0e00     movlw   0x00             	MOVLW	0x00
001194   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001196   0e00     movlw   0x00             	MOVLW	0x00
001198   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00119a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00119c   f009
00119e   0e0d     movlw   0x0d             	MOVLW	0x0d
0011a0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0011a2   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
0011a4   f011
                                           ;	.line	145; main.c	renderFrame(0, 0040004002, 0, 8); allOff();
0011a6   0e08     movlw   0x08             	MOVLW	0x08
0011a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011aa   0e00     movlw   0x00             	MOVLW	0x00
0011ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011ae   0e00     movlw   0x00             	MOVLW	0x00
0011b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011b2   0e00     movlw   0x00             	MOVLW	0x00
0011b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011b6   0e00     movlw   0x00             	MOVLW	0x00
0011b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011ba   0e00     movlw   0x00             	MOVLW	0x00
0011bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011be   0e80     movlw   0x80             	MOVLW	0x80
0011c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011c2   0e08     movlw   0x08             	MOVLW	0x08
0011c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011c6   0e02     movlw   0x02             	MOVLW	0x02
0011c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011ca   0e00     movlw   0x00             	MOVLW	0x00
0011cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011ce   0e00     movlw   0x00             	MOVLW	0x00
0011d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011d2   0e00     movlw   0x00             	MOVLW	0x00
0011d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011d6   0e00     movlw   0x00             	MOVLW	0x00
0011d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011da   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0011dc   f009
0011de   0e0d     movlw   0x0d             	MOVLW	0x0d
0011e0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0011e2   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
0011e4   f011
                                           ;	.line	146; main.c	renderFrame(0, 0400040004, 0, 8); allOff();
0011e6   0e08     movlw   0x08             	MOVLW	0x08
0011e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011ea   0e00     movlw   0x00             	MOVLW	0x00
0011ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011ee   0e00     movlw   0x00             	MOVLW	0x00
0011f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011f2   0e00     movlw   0x00             	MOVLW	0x00
0011f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011f6   0e00     movlw   0x00             	MOVLW	0x00
0011f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011fa   0e04     movlw   0x04             	MOVLW	0x04
0011fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0011fe   0e00     movlw   0x00             	MOVLW	0x00
001200   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001202   0e40     movlw   0x40             	MOVLW	0x40
001204   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001206   0e04     movlw   0x04             	MOVLW	0x04
001208   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00120a   0e00     movlw   0x00             	MOVLW	0x00
00120c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00120e   0e00     movlw   0x00             	MOVLW	0x00
001210   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001212   0e00     movlw   0x00             	MOVLW	0x00
001214   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001216   0e00     movlw   0x00             	MOVLW	0x00
001218   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00121a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00121c   f009
00121e   0e0d     movlw   0x0d             	MOVLW	0x0d
001220   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001222   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
001224   f011
                                           ;	.line	147; main.c	renderFrame(0, 0200400040, 0, 8); allOff();
001226   0e08     movlw   0x08             	MOVLW	0x08
001228   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00122a   0e00     movlw   0x00             	MOVLW	0x00
00122c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00122e   0e00     movlw   0x00             	MOVLW	0x00
001230   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001232   0e00     movlw   0x00             	MOVLW	0x00
001234   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001236   0e00     movlw   0x00             	MOVLW	0x00
001238   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00123a   0e02     movlw   0x02             	MOVLW	0x02
00123c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00123e   0e02     movlw   0x02             	MOVLW	0x02
001240   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001242   0e00     movlw   0x00             	MOVLW	0x00
001244   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001246   0e20     movlw   0x20             	MOVLW	0x20
001248   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00124a   0e00     movlw   0x00             	MOVLW	0x00
00124c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00124e   0e00     movlw   0x00             	MOVLW	0x00
001250   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001252   0e00     movlw   0x00             	MOVLW	0x00
001254   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001256   0e00     movlw   0x00             	MOVLW	0x00
001258   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00125a   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
00125c   f009
00125e   0e0d     movlw   0x0d             	MOVLW	0x0d
001260   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001262   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
001264   f011
                                           ;	.line	148; main.c	count--;
001266   0eff     movlw   0xff             	MOVLW	0xff
001268   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00126a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00126c   d6f4     bra     0x001056         	BRA	_00347_DS_
                                           _00350_DS_:
00126e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001270   f001
001272   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001274   f000
001276   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001278   ffd9
00127a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__randomPixle	code
                                           _randomPixle:
                                           ;	.line	127; main.c	void randomPixle(int count) {
0007b8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0007ba   ffe5
0007bc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0007be   ffd9
0007c0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0007c2   ffe5
0007c4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0007c6   ffe5
0007c8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0007ca   ffe5
0007cc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0007ce   ffe5
0007d0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0007d2   ffe5
0007d4   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0007d6   ffe5
0007d8   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0007da   ffe5
0007dc   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0007de   ffe5
0007e0   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
0007e2   ffe5
0007e4   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
0007e6   ffe5
0007e8   0e02     movlw   0x02             	MOVLW	0x02
0007ea   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0007ec   f000
0007ee   0e03     movlw   0x03             	MOVLW	0x03
0007f0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0007f2   f001
                                           _00298_DS_:
                                           ;	.line	128; main.c	while(count>0) {
0007f4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0007f6   0f80     addlw   0x80             	ADDLW	0x80
0007f8   0f80     addlw   0x80             	ADDLW	0x80
0007fa   e102     bnz     0x000800         	BNZ	_00316_DS_
0007fc   0e01     movlw   0x01             	MOVLW	0x01
0007fe   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _00316_DS_:
000800   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
000802   ef4a     goto    0x000c94         	GOTO	_00301_DS_
000804   f006
                                           ;	.line	129; main.c	switch(rand()%(3)) {
000806   ecc1     call    0x002182, 0x0call    0x002182, 0x0 	CALL	_rand
000808   f010
00080a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00080c   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
00080e   f003
000810   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
000812   f004
000814   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
000816   f005
000818   0e00     movlw   0x00             	MOVLW	0x00
00081a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00081c   0e00     movlw   0x00             	MOVLW	0x00
00081e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000820   0e00     movlw   0x00             	MOVLW	0x00
000822   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000824   0e03     movlw   0x03             	MOVLW	0x03
000826   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000828   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00082a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00082c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00082e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000830   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000832   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000834   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000836   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000838   ec4c     call    0x001898, 0x0call    0x001898, 0x0 	CALL	__modslong
00083a   f00c
00083c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00083e   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
000840   f003
000842   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
000844   f004
000846   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
000848   f005
00084a   0e08     movlw   0x08             	MOVLW	0x08
00084c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00084e   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
000850   ae05     btfss   0x05, 0x7, 0x0   	BTFSS	r0x05, 7
000852   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
000854   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000856   ef45     goto    0x000c8a         	GOTO	_00297_DS_
000858   f006
00085a   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00085c   0f80     addlw   0x80             	ADDLW	0x80
00085e   0f80     addlw   0x80             	ADDLW	0x80
000860   e108     bnz     0x000872         	BNZ	_00317_DS_
000862   0e00     movlw   0x00             	MOVLW	0x00
000864   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
000866   e105     bnz     0x000872         	BNZ	_00317_DS_
000868   0e00     movlw   0x00             	MOVLW	0x00
00086a   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
00086c   e102     bnz     0x000872         	BNZ	_00317_DS_
00086e   0e03     movlw   0x03             	MOVLW	0x03
000870   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _00317_DS_:
000872   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000874   ef45     goto    0x000c8a         	GOTO	_00297_DS_
000876   f006
000878   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
00087a   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
00087c   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
00087e   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000880   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
000882   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000884   0bfc     andlw   0xfc             	ANDLW	0xfc
000886   0f96     addlw   0x96             	ADDLW	LOW(_00318_DS_)
000888   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00088a   0e08     movlw   0x08             	MOVLW	HIGH(_00318_DS_)
00088c   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00088e   0e00     movlw   0x00             	MOVLW	UPPER(_00318_DS_)
000890   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
000892   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
000894   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00318_DS_:
000896   ef51     goto    0x0008a2         	GOTO	_00294_DS_
000898   f004
00089a   eff8     goto    0x0009f0         	GOTO	_00295_DS_
00089c   f004
00089e   ef9f     goto    0x000b3e         	GOTO	_00296_DS_
0008a0   f005
                                           _00294_DS_:
                                           ;	.line	130; main.c	case 0: renderFrame(0400000000>>(rand()%27), 0400000000>>(rand()%27), 0, 3); allOff(); break;
0008a2   ecc1     call    0x002182, 0x0call    0x002182, 0x0 	CALL	_rand
0008a4   f010
0008a6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0008a8   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0008aa   f003
0008ac   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
0008ae   f004
0008b0   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
0008b2   f005
0008b4   0e00     movlw   0x00             	MOVLW	0x00
0008b6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0008b8   0e00     movlw   0x00             	MOVLW	0x00
0008ba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0008bc   0e00     movlw   0x00             	MOVLW	0x00
0008be   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0008c0   0e1b     movlw   0x1b             	MOVLW	0x1b
0008c2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0008c4   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0008c6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0008c8   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0008ca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0008cc   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0008ce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0008d0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0008d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0008d4   ec4c     call    0x001898, 0x0call    0x001898, 0x0 	CALL	__modslong
0008d6   f00c
0008d8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0008da   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0008dc   f003
0008de   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
0008e0   f004
0008e2   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
0008e4   f005
0008e6   0e08     movlw   0x08             	MOVLW	0x08
0008e8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0008ea   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0008ec   6ee9     movwf   0xe9, 0x0        	MOVWF	FSR0L
0008ee   0e00     movlw   0x00             	MOVLW	0x00
0008f0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0008f2   0e00     movlw   0x00             	MOVLW	0x00
0008f4   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0008f6   0e00     movlw   0x00             	MOVLW	0x00
0008f8   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0008fa   0e04     movlw   0x04             	MOVLW	0x04
0008fc   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0008fe   50e9     movf    0xe9, 0x0, 0x0   	MOVF	FSR0L, W
000900   e013     bz      0x000928         	BZ	_00319_DS_
000902   e60b     bn      0x00091a         	BN	_00322_DS_
000904   6ce8     negf    0xe8, 0x0        	NEGF	WREG
000906   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00320_DS_:
000908   be05     btfsc   0x05, 0x7, 0x0   	BTFSC	r0x05, 7
00090a   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
00090c   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
00090e   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
000910   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
000912   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
000914   0f01     addlw   0x01             	ADDLW	0x01
000916   e3f8     bnc     0x000908         	BNC	_00320_DS_
000918   d007     bra     0x000928         	BRA	_00319_DS_
                                           _00322_DS_:
00091a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00321_DS_:
00091c   3602     rlcf    0x02, 0x1, 0x0   	RLCF	r0x02, F
00091e   3603     rlcf    0x03, 0x1, 0x0   	RLCF	r0x03, F
000920   3604     rlcf    0x04, 0x1, 0x0   	RLCF	r0x04, F
000922   3605     rlcf    0x05, 0x1, 0x0   	RLCF	r0x05, F
000924   0f01     addlw   0x01             	ADDLW	0x01
000926   e3fa     bnc     0x00091c         	BNC	_00321_DS_
                                           _00319_DS_:
000928   ecc1     call    0x002182, 0x0call    0x002182, 0x0 	CALL	_rand
00092a   f010
00092c   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
00092e   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
000930   f007
000932   cff4     movff   0xff4, 0x008     	MOVFF	PRODH, r0x08
000934   f008
000936   cfe9     movff   0xfe9, 0x009     	MOVFF	FSR0L, r0x09
000938   f009
00093a   0e00     movlw   0x00             	MOVLW	0x00
00093c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00093e   0e00     movlw   0x00             	MOVLW	0x00
000940   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000942   0e00     movlw   0x00             	MOVLW	0x00
000944   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000946   0e1b     movlw   0x1b             	MOVLW	0x1b
000948   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00094a   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
00094c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00094e   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
000950   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000952   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
000954   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000956   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
000958   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00095a   ec4c     call    0x001898, 0x0call    0x001898, 0x0 	CALL	__modslong
00095c   f00c
00095e   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000960   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
000962   f007
000964   cff4     movff   0xff4, 0x008     	MOVFF	PRODH, r0x08
000966   f008
000968   cfe9     movff   0xfe9, 0x009     	MOVFF	FSR0L, r0x09
00096a   f009
00096c   0e08     movlw   0x08             	MOVLW	0x08
00096e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000970   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
000972   6ee9     movwf   0xe9, 0x0        	MOVWF	FSR0L
000974   0e00     movlw   0x00             	MOVLW	0x00
000976   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000978   0e00     movlw   0x00             	MOVLW	0x00
00097a   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
00097c   0e00     movlw   0x00             	MOVLW	0x00
00097e   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
000980   0e04     movlw   0x04             	MOVLW	0x04
000982   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
000984   50e9     movf    0xe9, 0x0, 0x0   	MOVF	FSR0L, W
000986   e013     bz      0x0009ae         	BZ	_00323_DS_
000988   e60b     bn      0x0009a0         	BN	_00326_DS_
00098a   6ce8     negf    0xe8, 0x0        	NEGF	WREG
00098c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00324_DS_:
00098e   be09     btfsc   0x09, 0x7, 0x0   	BTFSC	r0x09, 7
000990   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
000992   3209     rrcf    0x09, 0x1, 0x0   	RRCF	r0x09, F
000994   3208     rrcf    0x08, 0x1, 0x0   	RRCF	r0x08, F
000996   3207     rrcf    0x07, 0x1, 0x0   	RRCF	r0x07, F
000998   3206     rrcf    0x06, 0x1, 0x0   	RRCF	r0x06, F
00099a   0f01     addlw   0x01             	ADDLW	0x01
00099c   e3f8     bnc     0x00098e         	BNC	_00324_DS_
00099e   d007     bra     0x0009ae         	BRA	_00323_DS_
                                           _00326_DS_:
0009a0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00325_DS_:
0009a2   3606     rlcf    0x06, 0x1, 0x0   	RLCF	r0x06, F
0009a4   3607     rlcf    0x07, 0x1, 0x0   	RLCF	r0x07, F
0009a6   3608     rlcf    0x08, 0x1, 0x0   	RLCF	r0x08, F
0009a8   3609     rlcf    0x09, 0x1, 0x0   	RLCF	r0x09, F
0009aa   0f01     addlw   0x01             	ADDLW	0x01
0009ac   e3fa     bnc     0x0009a2         	BNC	_00325_DS_
                                           _00323_DS_:
0009ae   0e03     movlw   0x03             	MOVLW	0x03
0009b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009b2   0e00     movlw   0x00             	MOVLW	0x00
0009b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009b6   0e00     movlw   0x00             	MOVLW	0x00
0009b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009ba   0e00     movlw   0x00             	MOVLW	0x00
0009bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009be   0e00     movlw   0x00             	MOVLW	0x00
0009c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009c2   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0009c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009c6   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
0009c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009ca   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0009cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009ce   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0009d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009d2   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0009d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009d6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0009d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009da   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0009dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009de   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0009e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009e2   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
0009e4   f009
0009e6   0e0d     movlw   0x0d             	MOVLW	0x0d
0009e8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0009ea   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
0009ec   f011
0009ee   d14d     bra     0x000c8a         	BRA	_00297_DS_
                                           _00295_DS_:
                                           ;	.line	131; main.c	case 1: renderFrame(0, 0400000000>>(rand()%27), 0400000000>>(rand()%27), 3); allOff(); break;
0009f0   ecc1     call    0x002182, 0x0call    0x002182, 0x0 	CALL	_rand
0009f2   f010
0009f4   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0009f6   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0009f8   f003
0009fa   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
0009fc   f004
0009fe   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
000a00   f005
000a02   0e00     movlw   0x00             	MOVLW	0x00
000a04   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a06   0e00     movlw   0x00             	MOVLW	0x00
000a08   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a0a   0e00     movlw   0x00             	MOVLW	0x00
000a0c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a0e   0e1b     movlw   0x1b             	MOVLW	0x1b
000a10   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a12   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
000a14   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a16   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
000a18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a1a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000a1c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a1e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000a20   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a22   ec4c     call    0x001898, 0x0call    0x001898, 0x0 	CALL	__modslong
000a24   f00c
000a26   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000a28   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
000a2a   f003
000a2c   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
000a2e   f004
000a30   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
000a32   f005
000a34   0e08     movlw   0x08             	MOVLW	0x08
000a36   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000a38   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000a3a   6ee9     movwf   0xe9, 0x0        	MOVWF	FSR0L
000a3c   0e00     movlw   0x00             	MOVLW	0x00
000a3e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000a40   0e00     movlw   0x00             	MOVLW	0x00
000a42   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000a44   0e00     movlw   0x00             	MOVLW	0x00
000a46   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000a48   0e04     movlw   0x04             	MOVLW	0x04
000a4a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
000a4c   50e9     movf    0xe9, 0x0, 0x0   	MOVF	FSR0L, W
000a4e   e013     bz      0x000a76         	BZ	_00327_DS_
000a50   e60b     bn      0x000a68         	BN	_00330_DS_
000a52   6ce8     negf    0xe8, 0x0        	NEGF	WREG
000a54   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00328_DS_:
000a56   be05     btfsc   0x05, 0x7, 0x0   	BTFSC	r0x05, 7
000a58   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
000a5a   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
000a5c   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
000a5e   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
000a60   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
000a62   0f01     addlw   0x01             	ADDLW	0x01
000a64   e3f8     bnc     0x000a56         	BNC	_00328_DS_
000a66   d007     bra     0x000a76         	BRA	_00327_DS_
                                           _00330_DS_:
000a68   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00329_DS_:
000a6a   3602     rlcf    0x02, 0x1, 0x0   	RLCF	r0x02, F
000a6c   3603     rlcf    0x03, 0x1, 0x0   	RLCF	r0x03, F
000a6e   3604     rlcf    0x04, 0x1, 0x0   	RLCF	r0x04, F
000a70   3605     rlcf    0x05, 0x1, 0x0   	RLCF	r0x05, F
000a72   0f01     addlw   0x01             	ADDLW	0x01
000a74   e3fa     bnc     0x000a6a         	BNC	_00329_DS_
                                           _00327_DS_:
000a76   ecc1     call    0x002182, 0x0call    0x002182, 0x0 	CALL	_rand
000a78   f010
000a7a   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000a7c   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
000a7e   f007
000a80   cff4     movff   0xff4, 0x008     	MOVFF	PRODH, r0x08
000a82   f008
000a84   cfe9     movff   0xfe9, 0x009     	MOVFF	FSR0L, r0x09
000a86   f009
000a88   0e00     movlw   0x00             	MOVLW	0x00
000a8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a8c   0e00     movlw   0x00             	MOVLW	0x00
000a8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a90   0e00     movlw   0x00             	MOVLW	0x00
000a92   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a94   0e1b     movlw   0x1b             	MOVLW	0x1b
000a96   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a98   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
000a9a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a9c   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
000a9e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000aa0   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
000aa2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000aa4   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
000aa6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000aa8   ec4c     call    0x001898, 0x0call    0x001898, 0x0 	CALL	__modslong
000aaa   f00c
000aac   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000aae   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
000ab0   f007
000ab2   cff4     movff   0xff4, 0x008     	MOVFF	PRODH, r0x08
000ab4   f008
000ab6   cfe9     movff   0xfe9, 0x009     	MOVFF	FSR0L, r0x09
000ab8   f009
000aba   0e08     movlw   0x08             	MOVLW	0x08
000abc   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000abe   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
000ac0   6ee9     movwf   0xe9, 0x0        	MOVWF	FSR0L
000ac2   0e00     movlw   0x00             	MOVLW	0x00
000ac4   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000ac6   0e00     movlw   0x00             	MOVLW	0x00
000ac8   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
000aca   0e00     movlw   0x00             	MOVLW	0x00
000acc   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
000ace   0e04     movlw   0x04             	MOVLW	0x04
000ad0   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
000ad2   50e9     movf    0xe9, 0x0, 0x0   	MOVF	FSR0L, W
000ad4   e013     bz      0x000afc         	BZ	_00331_DS_
000ad6   e60b     bn      0x000aee         	BN	_00334_DS_
000ad8   6ce8     negf    0xe8, 0x0        	NEGF	WREG
000ada   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00332_DS_:
000adc   be09     btfsc   0x09, 0x7, 0x0   	BTFSC	r0x09, 7
000ade   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
000ae0   3209     rrcf    0x09, 0x1, 0x0   	RRCF	r0x09, F
000ae2   3208     rrcf    0x08, 0x1, 0x0   	RRCF	r0x08, F
000ae4   3207     rrcf    0x07, 0x1, 0x0   	RRCF	r0x07, F
000ae6   3206     rrcf    0x06, 0x1, 0x0   	RRCF	r0x06, F
000ae8   0f01     addlw   0x01             	ADDLW	0x01
000aea   e3f8     bnc     0x000adc         	BNC	_00332_DS_
000aec   d007     bra     0x000afc         	BRA	_00331_DS_
                                           _00334_DS_:
000aee   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00333_DS_:
000af0   3606     rlcf    0x06, 0x1, 0x0   	RLCF	r0x06, F
000af2   3607     rlcf    0x07, 0x1, 0x0   	RLCF	r0x07, F
000af4   3608     rlcf    0x08, 0x1, 0x0   	RLCF	r0x08, F
000af6   3609     rlcf    0x09, 0x1, 0x0   	RLCF	r0x09, F
000af8   0f01     addlw   0x01             	ADDLW	0x01
000afa   e3fa     bnc     0x000af0         	BNC	_00333_DS_
                                           _00331_DS_:
000afc   0e03     movlw   0x03             	MOVLW	0x03
000afe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b00   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
000b02   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b04   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
000b06   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b08   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
000b0a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b0c   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
000b0e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b10   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
000b12   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b14   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
000b16   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b18   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000b1a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b1c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000b1e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b20   0e00     movlw   0x00             	MOVLW	0x00
000b22   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b24   0e00     movlw   0x00             	MOVLW	0x00
000b26   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b28   0e00     movlw   0x00             	MOVLW	0x00
000b2a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b2c   0e00     movlw   0x00             	MOVLW	0x00
000b2e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b30   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000b32   f009
000b34   0e0d     movlw   0x0d             	MOVLW	0x0d
000b36   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000b38   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000b3a   f011
000b3c   d0a6     bra     0x000c8a         	BRA	_00297_DS_
                                           _00296_DS_:
                                           ;	.line	132; main.c	case 2: renderFrame(0400000000>>(rand()%27), 0, 0400000000>>(rand()%27), 3); allOff(); break;
000b3e   ecc1     call    0x002182, 0x0call    0x002182, 0x0 	CALL	_rand
000b40   f010
000b42   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000b44   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
000b46   f003
000b48   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
000b4a   f004
000b4c   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
000b4e   f005
000b50   0e00     movlw   0x00             	MOVLW	0x00
000b52   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b54   0e00     movlw   0x00             	MOVLW	0x00
000b56   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b58   0e00     movlw   0x00             	MOVLW	0x00
000b5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b5c   0e1b     movlw   0x1b             	MOVLW	0x1b
000b5e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b60   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
000b62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b64   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
000b66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b68   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000b6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b6c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000b6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b70   ec4c     call    0x001898, 0x0call    0x001898, 0x0 	CALL	__modslong
000b72   f00c
000b74   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000b76   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
000b78   f003
000b7a   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
000b7c   f004
000b7e   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
000b80   f005
000b82   0e08     movlw   0x08             	MOVLW	0x08
000b84   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000b86   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000b88   6ee9     movwf   0xe9, 0x0        	MOVWF	FSR0L
000b8a   0e00     movlw   0x00             	MOVLW	0x00
000b8c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000b8e   0e00     movlw   0x00             	MOVLW	0x00
000b90   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000b92   0e00     movlw   0x00             	MOVLW	0x00
000b94   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000b96   0e04     movlw   0x04             	MOVLW	0x04
000b98   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
000b9a   50e9     movf    0xe9, 0x0, 0x0   	MOVF	FSR0L, W
000b9c   e013     bz      0x000bc4         	BZ	_00335_DS_
000b9e   e60b     bn      0x000bb6         	BN	_00338_DS_
000ba0   6ce8     negf    0xe8, 0x0        	NEGF	WREG
000ba2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00336_DS_:
000ba4   be05     btfsc   0x05, 0x7, 0x0   	BTFSC	r0x05, 7
000ba6   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
000ba8   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
000baa   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
000bac   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
000bae   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
000bb0   0f01     addlw   0x01             	ADDLW	0x01
000bb2   e3f8     bnc     0x000ba4         	BNC	_00336_DS_
000bb4   d007     bra     0x000bc4         	BRA	_00335_DS_
                                           _00338_DS_:
000bb6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00337_DS_:
000bb8   3602     rlcf    0x02, 0x1, 0x0   	RLCF	r0x02, F
000bba   3603     rlcf    0x03, 0x1, 0x0   	RLCF	r0x03, F
000bbc   3604     rlcf    0x04, 0x1, 0x0   	RLCF	r0x04, F
000bbe   3605     rlcf    0x05, 0x1, 0x0   	RLCF	r0x05, F
000bc0   0f01     addlw   0x01             	ADDLW	0x01
000bc2   e3fa     bnc     0x000bb8         	BNC	_00337_DS_
                                           _00335_DS_:
000bc4   ecc1     call    0x002182, 0x0call    0x002182, 0x0 	CALL	_rand
000bc6   f010
000bc8   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000bca   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
000bcc   f007
000bce   cff4     movff   0xff4, 0x008     	MOVFF	PRODH, r0x08
000bd0   f008
000bd2   cfe9     movff   0xfe9, 0x009     	MOVFF	FSR0L, r0x09
000bd4   f009
000bd6   0e00     movlw   0x00             	MOVLW	0x00
000bd8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000bda   0e00     movlw   0x00             	MOVLW	0x00
000bdc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000bde   0e00     movlw   0x00             	MOVLW	0x00
000be0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000be2   0e1b     movlw   0x1b             	MOVLW	0x1b
000be4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000be6   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
000be8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000bea   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
000bec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000bee   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
000bf0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000bf2   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
000bf4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000bf6   ec4c     call    0x001898, 0x0call    0x001898, 0x0 	CALL	__modslong
000bf8   f00c
000bfa   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000bfc   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
000bfe   f007
000c00   cff4     movff   0xff4, 0x008     	MOVFF	PRODH, r0x08
000c02   f008
000c04   cfe9     movff   0xfe9, 0x009     	MOVFF	FSR0L, r0x09
000c06   f009
000c08   0e08     movlw   0x08             	MOVLW	0x08
000c0a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000c0c   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
000c0e   6ee9     movwf   0xe9, 0x0        	MOVWF	FSR0L
000c10   0e00     movlw   0x00             	MOVLW	0x00
000c12   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000c14   0e00     movlw   0x00             	MOVLW	0x00
000c16   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
000c18   0e00     movlw   0x00             	MOVLW	0x00
000c1a   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
000c1c   0e04     movlw   0x04             	MOVLW	0x04
000c1e   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
000c20   50e9     movf    0xe9, 0x0, 0x0   	MOVF	FSR0L, W
000c22   e013     bz      0x000c4a         	BZ	_00339_DS_
000c24   e60b     bn      0x000c3c         	BN	_00342_DS_
000c26   6ce8     negf    0xe8, 0x0        	NEGF	WREG
000c28   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00340_DS_:
000c2a   be09     btfsc   0x09, 0x7, 0x0   	BTFSC	r0x09, 7
000c2c   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
000c2e   3209     rrcf    0x09, 0x1, 0x0   	RRCF	r0x09, F
000c30   3208     rrcf    0x08, 0x1, 0x0   	RRCF	r0x08, F
000c32   3207     rrcf    0x07, 0x1, 0x0   	RRCF	r0x07, F
000c34   3206     rrcf    0x06, 0x1, 0x0   	RRCF	r0x06, F
000c36   0f01     addlw   0x01             	ADDLW	0x01
000c38   e3f8     bnc     0x000c2a         	BNC	_00340_DS_
000c3a   d007     bra     0x000c4a         	BRA	_00339_DS_
                                           _00342_DS_:
000c3c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00341_DS_:
000c3e   3606     rlcf    0x06, 0x1, 0x0   	RLCF	r0x06, F
000c40   3607     rlcf    0x07, 0x1, 0x0   	RLCF	r0x07, F
000c42   3608     rlcf    0x08, 0x1, 0x0   	RLCF	r0x08, F
000c44   3609     rlcf    0x09, 0x1, 0x0   	RLCF	r0x09, F
000c46   0f01     addlw   0x01             	ADDLW	0x01
000c48   e3fa     bnc     0x000c3e         	BNC	_00341_DS_
                                           _00339_DS_:
000c4a   0e03     movlw   0x03             	MOVLW	0x03
000c4c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c4e   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
000c50   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c52   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
000c54   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c56   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
000c58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c5a   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
000c5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c5e   0e00     movlw   0x00             	MOVLW	0x00
000c60   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c62   0e00     movlw   0x00             	MOVLW	0x00
000c64   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c66   0e00     movlw   0x00             	MOVLW	0x00
000c68   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c6a   0e00     movlw   0x00             	MOVLW	0x00
000c6c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c6e   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
000c70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c72   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
000c74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c76   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000c78   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c7a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000c7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000c7e   ec3e     call    0x00127c, 0x0call    0x00127c, 0x0 	CALL	_renderFrame
000c80   f009
000c82   0e0d     movlw   0x0d             	MOVLW	0x0d
000c84   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000c86   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
000c88   f011
                                           _00297_DS_:
                                           ;	.line	134; main.c	count--;
000c8a   0eff     movlw   0xff             	MOVLW	0xff
000c8c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c8e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c90   effa     goto    0x0007f4         	GOTO	_00298_DS_
000c92   f003
                                           _00301_DS_:
000c94   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
000c96   f009
000c98   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
000c9a   f008
000c9c   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
000c9e   f007
000ca0   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
000ca2   f006
000ca4   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
000ca6   f005
000ca8   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
000caa   f004
000cac   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
000cae   f003
000cb0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
000cb2   f002
000cb4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
000cb6   f001
000cb8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
000cba   f000
000cbc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000cbe   ffd9
000cc0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__renderFrame	code
                                           _renderFrame:
                                           ;	.line	106; main.c	void renderFrame(unsigned long redValues, unsigned long greenValues, unsigned long blueValues, char holdTime) {
00127c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00127e   ffe5
001280   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001282   ffd9
001284   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001286   ffe5
001288   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00128a   ffe5
00128c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00128e   ffe5
001290   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001292   ffe5
001294   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
001296   ffe5
001298   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00129a   ffe5
00129c   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00129e   ffe5
0012a0   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0012a2   ffe5
0012a4   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
0012a6   ffe5
0012a8   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
0012aa   ffe5
0012ac   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
0012ae   ffe5
0012b0   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
0012b2   ffe5
0012b4   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
0012b6   ffe5
0012b8   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
0012ba   ffe5
0012bc   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
0012be   ffe5
0012c0   0e02     movlw   0x02             	MOVLW	0x02
0012c2   cfdb     movff   0xfdb, 0x0d6     	MOVFF	PLUSW2, _workingVar
0012c4   f0d6
0012c6   0e03     movlw   0x03             	MOVLW	0x03
0012c8   cfdb     movff   0xfdb, 0x0d7     	MOVFF	PLUSW2, (_workingVar + 1)
0012ca   f0d7
0012cc   0e04     movlw   0x04             	MOVLW	0x04
0012ce   cfdb     movff   0xfdb, 0x0d8     	MOVFF	PLUSW2, (_workingVar + 2)
0012d0   f0d8
0012d2   0e05     movlw   0x05             	MOVLW	0x05
0012d4   cfdb     movff   0xfdb, 0x0d9     	MOVFF	PLUSW2, (_workingVar + 3)
0012d6   f0d9
0012d8   0e06     movlw   0x06             	MOVLW	0x06
0012da   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0012dc   f000
0012de   0e07     movlw   0x07             	MOVLW	0x07
0012e0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0012e2   f001
0012e4   0e08     movlw   0x08             	MOVLW	0x08
0012e6   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0012e8   f002
0012ea   0e09     movlw   0x09             	MOVLW	0x09
0012ec   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0012ee   f003
0012f0   0e0a     movlw   0x0a             	MOVLW	0x0a
0012f2   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
0012f4   f004
0012f6   0e0b     movlw   0x0b             	MOVLW	0x0b
0012f8   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
0012fa   f005
0012fc   0e0c     movlw   0x0c             	MOVLW	0x0c
0012fe   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
001300   f006
001302   0e0d     movlw   0x0d             	MOVLW	0x0d
001304   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
001306   f007
001308   0e0e     movlw   0x0e             	MOVLW	0x0e
00130a   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
00130c   f008
00130e   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	108; main.c	for(i = 0; i <= 26; i++) {
001310   6bf9     clrf    0xf9, 0x1        	CLRF	_i, B
                                           _00242_DS_:
                                           ;	.line	109; main.c	redData[i] = (workingVar >> i) & 1;
001312   0e80     movlw   0x80             	MOVLW	LOW(_redData)
001314   0100     movlb   0x0              	BANKSEL	_i
001316   25f9     addwf   0xf9, 0x0, 0x1   	ADDWF	_i, W, B
001318   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
00131a   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
00131c   0e00     movlw   0x00             	MOVLW	HIGH(_redData)
00131e   220a     addwfc  0x0a, 0x1, 0x0   	ADDWFC	r0x0a, F
001320   c0d6     movff   0x0d6, 0x00b     	MOVFF	_workingVar, r0x0b
001322   f00b
001324   c0d7     movff   0x0d7, 0x00c     	MOVFF	(_workingVar + 1), r0x0c
001326   f00c
001328   c0d8     movff   0x0d8, 0x00d     	MOVFF	(_workingVar + 2), r0x0d
00132a   f00d
00132c   c0d9     movff   0x0d9, 0x00e     	MOVFF	(_workingVar + 3), r0x0e
00132e   f00e
001330   0100     movlb   0x0              	BANKSEL	_i
001332   51f9     movf    0xf9, 0x0, 0x1   	MOVF	_i, W, B
001334   e008     bz      0x001346         	BZ	_00277_DS_
001336   6ce8     negf    0xe8, 0x0        	NEGF	WREG
001338   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00278_DS_:
00133a   320e     rrcf    0x0e, 0x1, 0x0   	RRCF	r0x0e, F
00133c   320d     rrcf    0x0d, 0x1, 0x0   	RRCF	r0x0d, F
00133e   320c     rrcf    0x0c, 0x1, 0x0   	RRCF	r0x0c, F
001340   320b     rrcf    0x0b, 0x1, 0x0   	RRCF	r0x0b, F
001342   0f01     addlw   0x01             	ADDLW	0x01
001344   e3fa     bnc     0x00133a         	BNC	_00278_DS_
                                           _00277_DS_:
001346   0e01     movlw   0x01             	MOVLW	0x01
001348   160b     andwf   0x0b, 0x1, 0x0   	ANDWF	r0x0b, F
00134a   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
00134c   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
00134e   6a0e     clrf    0x0e, 0x0        	CLRF	r0x0e
001350   c009     movff   0x009, 0xfe9     	MOVFF	r0x09, FSR0L
001352   ffe9
001354   c00a     movff   0x00a, 0xfea     	MOVFF	r0x0a, FSR0H
001356   ffea
001358   c00b     movff   0x00b, 0xfef     	MOVFF	r0x0b, INDF0
00135a   ffef
00135c   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	108; main.c	for(i = 0; i <= 26; i++) {
00135e   2bf9     incf    0xf9, 0x1, 0x1   	INCF	_i, F, B
001360   0e1b     movlw   0x1b             	MOVLW	0x1b
001362   0100     movlb   0x0              	BANKSEL	_i
001364   5df9     subwf   0xf9, 0x0, 0x1   	SUBWF	_i, W, B
001366   e3d5     bnc     0x001312         	BNC	_00242_DS_
                                           ;	.line	112; main.c	workingVar = greenValues;
001368   c000     movff   0x000, 0x0d6     	MOVFF	r0x00, _workingVar
00136a   f0d6
00136c   c001     movff   0x001, 0x0d7     	MOVFF	r0x01, (_workingVar + 1)
00136e   f0d7
001370   c002     movff   0x002, 0x0d8     	MOVFF	r0x02, (_workingVar + 2)
001372   f0d8
001374   c003     movff   0x003, 0x0d9     	MOVFF	r0x03, (_workingVar + 3)
001376   f0d9
001378   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	113; main.c	for(i = 0; i <= 26; i++) {
00137a   6bf9     clrf    0xf9, 0x1        	CLRF	_i, B
                                           _00244_DS_:
                                           ;	.line	114; main.c	greenData[i] = (workingVar >> i) & 1;
00137c   0e9b     movlw   0x9b             	MOVLW	LOW(_greenData)
00137e   0100     movlb   0x0              	BANKSEL	_i
001380   25f9     addwf   0xf9, 0x0, 0x1   	ADDWF	_i, W, B
001382   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001384   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001386   0e00     movlw   0x00             	MOVLW	HIGH(_greenData)
001388   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00138a   c0d6     movff   0x0d6, 0x002     	MOVFF	_workingVar, r0x02
00138c   f002
00138e   c0d7     movff   0x0d7, 0x003     	MOVFF	(_workingVar + 1), r0x03
001390   f003
001392   c0d8     movff   0x0d8, 0x009     	MOVFF	(_workingVar + 2), r0x09
001394   f009
001396   c0d9     movff   0x0d9, 0x00a     	MOVFF	(_workingVar + 3), r0x0a
001398   f00a
00139a   0100     movlb   0x0              	BANKSEL	_i
00139c   51f9     movf    0xf9, 0x0, 0x1   	MOVF	_i, W, B
00139e   e008     bz      0x0013b0         	BZ	_00281_DS_
0013a0   6ce8     negf    0xe8, 0x0        	NEGF	WREG
0013a2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00282_DS_:
0013a4   320a     rrcf    0x0a, 0x1, 0x0   	RRCF	r0x0a, F
0013a6   3209     rrcf    0x09, 0x1, 0x0   	RRCF	r0x09, F
0013a8   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0013aa   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0013ac   0f01     addlw   0x01             	ADDLW	0x01
0013ae   e3fa     bnc     0x0013a4         	BNC	_00282_DS_
                                           _00281_DS_:
0013b0   0e01     movlw   0x01             	MOVLW	0x01
0013b2   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
0013b4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0013b6   6a09     clrf    0x09, 0x0        	CLRF	r0x09
0013b8   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
0013ba   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013bc   ffe9
0013be   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013c0   ffea
0013c2   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0013c4   ffef
0013c6   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	113; main.c	for(i = 0; i <= 26; i++) {
0013c8   2bf9     incf    0xf9, 0x1, 0x1   	INCF	_i, F, B
0013ca   0e1b     movlw   0x1b             	MOVLW	0x1b
0013cc   0100     movlb   0x0              	BANKSEL	_i
0013ce   5df9     subwf   0xf9, 0x0, 0x1   	SUBWF	_i, W, B
0013d0   e3d5     bnc     0x00137c         	BNC	_00244_DS_
                                           ;	.line	117; main.c	workingVar = blueValues;
0013d2   c004     movff   0x004, 0x0d6     	MOVFF	r0x04, _workingVar
0013d4   f0d6
0013d6   c005     movff   0x005, 0x0d7     	MOVFF	r0x05, (_workingVar + 1)
0013d8   f0d7
0013da   c006     movff   0x006, 0x0d8     	MOVFF	r0x06, (_workingVar + 2)
0013dc   f0d8
0013de   c007     movff   0x007, 0x0d9     	MOVFF	r0x07, (_workingVar + 3)
0013e0   f0d9
0013e2   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	118; main.c	for(i = 0; i <= 26; i++) {
0013e4   6bf9     clrf    0xf9, 0x1        	CLRF	_i, B
                                           _00246_DS_:
                                           ;	.line	119; main.c	blueData[i] = (workingVar >> i) & 1;
0013e6   0eb6     movlw   0xb6             	MOVLW	LOW(_blueData)
0013e8   0100     movlb   0x0              	BANKSEL	_i
0013ea   25f9     addwf   0xf9, 0x0, 0x1   	ADDWF	_i, W, B
0013ec   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0013ee   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0013f0   0e00     movlw   0x00             	MOVLW	HIGH(_blueData)
0013f2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013f4   c0d6     movff   0x0d6, 0x002     	MOVFF	_workingVar, r0x02
0013f6   f002
0013f8   c0d7     movff   0x0d7, 0x003     	MOVFF	(_workingVar + 1), r0x03
0013fa   f003
0013fc   c0d8     movff   0x0d8, 0x004     	MOVFF	(_workingVar + 2), r0x04
0013fe   f004
001400   c0d9     movff   0x0d9, 0x005     	MOVFF	(_workingVar + 3), r0x05
001402   f005
001404   0100     movlb   0x0              	BANKSEL	_i
001406   51f9     movf    0xf9, 0x0, 0x1   	MOVF	_i, W, B
001408   e008     bz      0x00141a         	BZ	_00285_DS_
00140a   6ce8     negf    0xe8, 0x0        	NEGF	WREG
00140c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _00286_DS_:
00140e   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
001410   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
001412   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
001414   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
001416   0f01     addlw   0x01             	ADDLW	0x01
001418   e3fa     bnc     0x00140e         	BNC	_00286_DS_
                                           _00285_DS_:
00141a   0e01     movlw   0x01             	MOVLW	0x01
00141c   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
00141e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001420   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001422   6a05     clrf    0x05, 0x0        	CLRF	r0x05
001424   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001426   ffe9
001428   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00142a   ffea
00142c   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
00142e   ffef
001430   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	118; main.c	for(i = 0; i <= 26; i++) {
001432   2bf9     incf    0xf9, 0x1, 0x1   	INCF	_i, F, B
001434   0e1b     movlw   0x1b             	MOVLW	0x1b
001436   0100     movlb   0x0              	BANKSEL	_i
001438   5df9     subwf   0xf9, 0x0, 0x1   	SUBWF	_i, W, B
00143a   e3d5     bnc     0x0013e6         	BNC	_00246_DS_
00143c   0100     movlb   0x0              	BANKSEL	_k
                                           ;	.line	122; main.c	for(k = 0; k < holdTime; k++) {
00143e   6bfb     clrf    0xfb, 0x1        	CLRF	_k, B
                                           _00249_DS_:
001440   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
001442   0100     movlb   0x0              	BANKSEL	_k
001444   5dfb     subwf   0xfb, 0x0, 0x1   	SUBWF	_k, W, B
001446   e205     bc      0x001452         	BC	_00251_DS_
                                           ;	.line	123; main.c	displayFrame();
001448   ec54     call    0x0016a8, 0x0call    0x0016a8, 0x0 	CALL	_displayFrame
00144a   f00b
00144c   0100     movlb   0x0              	BANKSEL	_k
                                           ;	.line	122; main.c	for(k = 0; k < holdTime; k++) {
00144e   2bfb     incf    0xfb, 0x1, 0x1   	INCF	_k, F, B
001450   d7f7     bra     0x001440         	BRA	_00249_DS_
                                           _00251_DS_:
001452   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
001454   f00e
001456   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
001458   f00d
00145a   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
00145c   f00c
00145e   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
001460   f00b
001462   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
001464   f00a
001466   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
001468   f009
00146a   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00146c   f008
00146e   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
001470   f007
001472   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001474   f006
001476   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
001478   f005
00147a   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00147c   f004
00147e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001480   f003
001482   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001484   f002
001486   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001488   f001
00148a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00148c   f000
00148e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001490   ffd9
001492   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__displayFrame	code
                                           _displayFrame:
                                           ;	.line	71; main.c	void displayFrame(void) {
0016a8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0016aa   ffe5
0016ac   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0016ae   ffd9
0016b0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0016b2   ffe5
0016b4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0016b6   ffe5
0016b8   0100     movlb   0x0              	BANKSEL	_pointer
                                           ;	.line	72; main.c	pointer = 0;
0016ba   6bf8     clrf    0xf8, 0x1        	CLRF	_pointer, B
0016bc   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	73; main.c	for(i = 0; i <= 2; i++) {
0016be   6bf9     clrf    0xf9, 0x1        	CLRF	_i, B
                                           _00183_DS_:
0016c0   0100     movlb   0x0              	BANKSEL	_j
                                           ;	.line	74; main.c	for(j = 0; j <= 8; j++) {
0016c2   6bfa     clrf    0xfa, 0x1        	CLRF	_j, B
                                           _00181_DS_:
                                           ;	.line	75; main.c	allOff();
0016c4   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
0016c6   f011
0016c8   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	76; main.c	colorSet(i);
0016ca   51f9     movf    0xf9, 0x0, 0x1   	MOVF	_i, W, B
0016cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0016ce   ec02     call    0x002004, 0x0call    0x002004, 0x0 	CALL	_colorSet
0016d0   f010
0016d2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	77; main.c	columbSet(j, redData[pointer]);
0016d4   0e80     movlw   0x80             	MOVLW	LOW(_redData)
0016d6   0100     movlb   0x0              	BANKSEL	_pointer
0016d8   25f8     addwf   0xf8, 0x0, 0x1   	ADDWF	_pointer, W, B
0016da   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0016dc   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0016de   0e00     movlw   0x00             	MOVLW	HIGH(_redData)
0016e0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0016e2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0016e4   ffe9
0016e6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0016e8   ffea
0016ea   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0016ec   f000
0016ee   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0016f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0016f2   0100     movlb   0x0              	BANKSEL	_j
0016f4   51fa     movf    0xfa, 0x0, 0x1   	MOVF	_j, W, B
0016f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0016f8   ecb6     call    0x001f6c, 0x0call    0x001f6c, 0x0 	CALL	_columbSet
0016fa   f00f
0016fc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0016fe   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	78; main.c	delay_us(delaySpeed*2);
001700   0e42     movlw   0x42             	MOVLW	LOW(_delaySpeed)
001702   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
001704   0e23     movlw   0x23             	MOVLW	HIGH(_delaySpeed)
001706   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
001708   0e00     movlw   0x00             	MOVLW	UPPER(_delaySpeed)
00170a   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
00170c   0009     tblrd*+                  	TBLRD*+	
00170e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001710   f000
001712   0009     tblrd*+                  	TBLRD*+	
001714   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
001716   f001
001718   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00171a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00171c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00171e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001720   0e00     movlw   0x00             	MOVLW	0x00
001722   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001724   0e02     movlw   0x02             	MOVLW	0x02
001726   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001728   ec66     call    0x001ecc, 0x0call    0x001ecc, 0x0 	CALL	__mulint
00172a   f00f
00172c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00172e   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
001730   f001
001732   0e04     movlw   0x04             	MOVLW	0x04
001734   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001736   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001738   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00173a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00173c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00173e   ec0a     call    0x002214, 0x0call    0x002214, 0x0 	CALL	_delay_us
001740   f011
001742   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001744   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001746   0100     movlb   0x0              	BANKSEL	_pointer
                                           ;	.line	79; main.c	pointer++;
001748   2bf8     incf    0xf8, 0x1, 0x1   	INCF	_pointer, F, B
00174a   0100     movlb   0x0              	BANKSEL	_j
                                           ;	.line	74; main.c	for(j = 0; j <= 8; j++) {
00174c   2bfa     incf    0xfa, 0x1, 0x1   	INCF	_j, F, B
00174e   0e09     movlw   0x09             	MOVLW	0x09
001750   0100     movlb   0x0              	BANKSEL	_j
001752   5dfa     subwf   0xfa, 0x0, 0x1   	SUBWF	_j, W, B
001754   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
001756   d7b6     bra     0x0016c4         	BRA	_00181_DS_
001758   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	73; main.c	for(i = 0; i <= 2; i++) {
00175a   2bf9     incf    0xf9, 0x1, 0x1   	INCF	_i, F, B
00175c   0e03     movlw   0x03             	MOVLW	0x03
00175e   0100     movlb   0x0              	BANKSEL	_i
001760   5df9     subwf   0xf9, 0x0, 0x1   	SUBWF	_i, W, B
001762   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
001764   d7ad     bra     0x0016c0         	BRA	_00183_DS_
001766   0100     movlb   0x0              	BANKSEL	_pointer
                                           ;	.line	83; main.c	pointer = 0;
001768   6bf8     clrf    0xf8, 0x1        	CLRF	_pointer, B
                                           ;	.line	84; main.c	for(i = 3; i <= 5; i++) {
00176a   0e03     movlw   0x03             	MOVLW	0x03
00176c   0100     movlb   0x0              	BANKSEL	_i
00176e   6ff9     movwf   0xf9, 0x1        	MOVWF	_i, B
                                           _00187_DS_:
001770   0100     movlb   0x0              	BANKSEL	_j
                                           ;	.line	85; main.c	for(j = 0; j <= 8; j++) {
001772   6bfa     clrf    0xfa, 0x1        	CLRF	_j, B
                                           _00185_DS_:
                                           ;	.line	86; main.c	allOff();
001774   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
001776   f011
001778   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	87; main.c	colorSet(i);
00177a   51f9     movf    0xf9, 0x0, 0x1   	MOVF	_i, W, B
00177c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00177e   ec02     call    0x002004, 0x0call    0x002004, 0x0 	CALL	_colorSet
001780   f010
001782   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	88; main.c	columbSet(j, greenData[pointer]);
001784   0e9b     movlw   0x9b             	MOVLW	LOW(_greenData)
001786   0100     movlb   0x0              	BANKSEL	_pointer
001788   25f8     addwf   0xf8, 0x0, 0x1   	ADDWF	_pointer, W, B
00178a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00178c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00178e   0e00     movlw   0x00             	MOVLW	HIGH(_greenData)
001790   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001792   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001794   ffe9
001796   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001798   ffea
00179a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00179c   f000
00179e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0017a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0017a2   0100     movlb   0x0              	BANKSEL	_j
0017a4   51fa     movf    0xfa, 0x0, 0x1   	MOVF	_j, W, B
0017a6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0017a8   ecb6     call    0x001f6c, 0x0call    0x001f6c, 0x0 	CALL	_columbSet
0017aa   f00f
0017ac   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0017ae   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	89; main.c	delay_us(delaySpeed);
0017b0   0e42     movlw   0x42             	MOVLW	LOW(_delaySpeed)
0017b2   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
0017b4   0e23     movlw   0x23             	MOVLW	HIGH(_delaySpeed)
0017b6   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
0017b8   0e00     movlw   0x00             	MOVLW	UPPER(_delaySpeed)
0017ba   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
0017bc   0009     tblrd*+                  	TBLRD*+	
0017be   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0017c0   f000
0017c2   0009     tblrd*+                  	TBLRD*+	
0017c4   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0017c6   f001
0017c8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0017ca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0017cc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0017ce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0017d0   ec0a     call    0x002214, 0x0call    0x002214, 0x0 	CALL	_delay_us
0017d2   f011
0017d4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0017d6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0017d8   0100     movlb   0x0              	BANKSEL	_pointer
                                           ;	.line	90; main.c	pointer++;
0017da   2bf8     incf    0xf8, 0x1, 0x1   	INCF	_pointer, F, B
0017dc   0100     movlb   0x0              	BANKSEL	_j
                                           ;	.line	85; main.c	for(j = 0; j <= 8; j++) {
0017de   2bfa     incf    0xfa, 0x1, 0x1   	INCF	_j, F, B
0017e0   0e09     movlw   0x09             	MOVLW	0x09
0017e2   0100     movlb   0x0              	BANKSEL	_j
0017e4   5dfa     subwf   0xfa, 0x0, 0x1   	SUBWF	_j, W, B
0017e6   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
0017e8   d7c5     bra     0x001774         	BRA	_00185_DS_
0017ea   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	84; main.c	for(i = 3; i <= 5; i++) {
0017ec   2bf9     incf    0xf9, 0x1, 0x1   	INCF	_i, F, B
0017ee   0e06     movlw   0x06             	MOVLW	0x06
0017f0   0100     movlb   0x0              	BANKSEL	_i
0017f2   5df9     subwf   0xf9, 0x0, 0x1   	SUBWF	_i, W, B
0017f4   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
0017f6   d7bc     bra     0x001770         	BRA	_00187_DS_
0017f8   0100     movlb   0x0              	BANKSEL	_pointer
                                           ;	.line	94; main.c	pointer = 0;
0017fa   6bf8     clrf    0xf8, 0x1        	CLRF	_pointer, B
                                           ;	.line	95; main.c	for(i = 6; i <= 8; i++) {
0017fc   0e06     movlw   0x06             	MOVLW	0x06
0017fe   0100     movlb   0x0              	BANKSEL	_i
001800   6ff9     movwf   0xf9, 0x1        	MOVWF	_i, B
                                           _00191_DS_:
001802   0100     movlb   0x0              	BANKSEL	_j
                                           ;	.line	96; main.c	for(j = 0; j <= 8; j++) {
001804   6bfa     clrf    0xfa, 0x1        	CLRF	_j, B
                                           _00189_DS_:
                                           ;	.line	97; main.c	allOff();
001806   ec7f     call    0x0022fe, 0x0call    0x0022fe, 0x0 	CALL	_allOff
001808   f011
00180a   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	98; main.c	colorSet(i);
00180c   51f9     movf    0xf9, 0x0, 0x1   	MOVF	_i, W, B
00180e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001810   ec02     call    0x002004, 0x0call    0x002004, 0x0 	CALL	_colorSet
001812   f010
001814   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	99; main.c	columbSet(j, blueData[pointer]);
001816   0eb6     movlw   0xb6             	MOVLW	LOW(_blueData)
001818   0100     movlb   0x0              	BANKSEL	_pointer
00181a   25f8     addwf   0xf8, 0x0, 0x1   	ADDWF	_pointer, W, B
00181c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00181e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001820   0e00     movlw   0x00             	MOVLW	HIGH(_blueData)
001822   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001824   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001826   ffe9
001828   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00182a   ffea
00182c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00182e   f000
001830   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001832   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001834   0100     movlb   0x0              	BANKSEL	_j
001836   51fa     movf    0xfa, 0x0, 0x1   	MOVF	_j, W, B
001838   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00183a   ecb6     call    0x001f6c, 0x0call    0x001f6c, 0x0 	CALL	_columbSet
00183c   f00f
00183e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001840   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	100; main.c	delay_us(delaySpeed);
001842   0e42     movlw   0x42             	MOVLW	LOW(_delaySpeed)
001844   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
001846   0e23     movlw   0x23             	MOVLW	HIGH(_delaySpeed)
001848   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
00184a   0e00     movlw   0x00             	MOVLW	UPPER(_delaySpeed)
00184c   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
00184e   0009     tblrd*+                  	TBLRD*+	
001850   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001852   f000
001854   0009     tblrd*+                  	TBLRD*+	
001856   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
001858   f001
00185a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00185c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00185e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001860   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001862   ec0a     call    0x002214, 0x0call    0x002214, 0x0 	CALL	_delay_us
001864   f011
001866   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001868   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00186a   0100     movlb   0x0              	BANKSEL	_pointer
                                           ;	.line	101; main.c	pointer++;
00186c   2bf8     incf    0xf8, 0x1, 0x1   	INCF	_pointer, F, B
00186e   0100     movlb   0x0              	BANKSEL	_j
                                           ;	.line	96; main.c	for(j = 0; j <= 8; j++) {
001870   2bfa     incf    0xfa, 0x1, 0x1   	INCF	_j, F, B
001872   0e09     movlw   0x09             	MOVLW	0x09
001874   0100     movlb   0x0              	BANKSEL	_j
001876   5dfa     subwf   0xfa, 0x0, 0x1   	SUBWF	_j, W, B
001878   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
00187a   d7c5     bra     0x001806         	BRA	_00189_DS_
00187c   0100     movlb   0x0              	BANKSEL	_i
                                           ;	.line	95; main.c	for(i = 6; i <= 8; i++) {
00187e   2bf9     incf    0xf9, 0x1, 0x1   	INCF	_i, F, B
001880   0e09     movlw   0x09             	MOVLW	0x09
001882   0100     movlb   0x0              	BANKSEL	_i
001884   5df9     subwf   0xf9, 0x0, 0x1   	SUBWF	_i, W, B
001886   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
001888   d7bc     bra     0x001802         	BRA	_00191_DS_
00188a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00188c   f001
00188e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001890   f000
001892   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001894   ffd9
001896   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__columbSet	code
                                           _columbSet:
                                           ;	.line	55; main.c	void columbSet(char columbAddr, char columbData) {
001f6c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001f6e   ffe5
001f70   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001f72   ffd9
001f74   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001f76   ffe5
001f78   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001f7a   ffe5
001f7c   0e02     movlw   0x02             	MOVLW	0x02
001f7e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
001f80   f000
001f82   0e03     movlw   0x03             	MOVLW	0x03
001f84   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
001f86   f001
                                           ;	.line	56; main.c	if(columbData != 0) {
001f88   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001f8a   e035     bz      0x001ff6         	BZ	_00161_DS_
                                           ;	.line	57; main.c	switch (columbAddr) {
001f8c   0e09     movlw   0x09             	MOVLW	0x09
001f8e   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001f90   e232     bc      0x001ff6         	BC	_00161_DS_
001f92   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
001f94   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
001f96   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
001f98   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
001f9a   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
001f9c   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
001f9e   0bfc     andlw   0xfc             	ANDLW	0xfc
001fa0   0fb0     addlw   0xb0             	ADDLW	LOW(_00170_DS_)
001fa2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001fa4   0e1f     movlw   0x1f             	MOVLW	HIGH(_00170_DS_)
001fa6   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
001fa8   0e00     movlw   0x00             	MOVLW	UPPER(_00170_DS_)
001faa   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
001fac   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
001fae   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00170_DS_:
001fb0   efea     goto    0x001fd4         	GOTO	_00149_DS_
001fb2   f00f
001fb4   efec     goto    0x001fd8         	GOTO	_00150_DS_
001fb6   f00f
001fb8   efee     goto    0x001fdc         	GOTO	_00151_DS_
001fba   f00f
001fbc   eff0     goto    0x001fe0         	GOTO	_00152_DS_
001fbe   f00f
001fc0   eff2     goto    0x001fe4         	GOTO	_00153_DS_
001fc2   f00f
001fc4   eff4     goto    0x001fe8         	GOTO	_00154_DS_
001fc6   f00f
001fc8   eff6     goto    0x001fec         	GOTO	_00155_DS_
001fca   f00f
001fcc   eff8     goto    0x001ff0         	GOTO	_00156_DS_
001fce   f00f
001fd0   effa     goto    0x001ff4         	GOTO	_00157_DS_
001fd2   f00f
                                           _00149_DS_:
                                           ;	.line	58; main.c	case 0: PORTB |= 0x20; break;
001fd4   8a81     bsf     0x81, 0x5, 0x0   	BSF	_PORTB, 5
001fd6   d00f     bra     0x001ff6         	BRA	_00161_DS_
                                           _00150_DS_:
                                           ;	.line	59; main.c	case 1: PORTB |= 0x10; break;
001fd8   8881     bsf     0x81, 0x4, 0x0   	BSF	_PORTB, 4
001fda   d00d     bra     0x001ff6         	BRA	_00161_DS_
                                           _00151_DS_:
                                           ;	.line	60; main.c	case 2: PORTB |= 0x08; break;
001fdc   8681     bsf     0x81, 0x3, 0x0   	BSF	_PORTB, 3
001fde   d00b     bra     0x001ff6         	BRA	_00161_DS_
                                           _00152_DS_:
                                           ;	.line	61; main.c	case 3: PORTB |= 0x04; break;
001fe0   8481     bsf     0x81, 0x2, 0x0   	BSF	_PORTB, 2
001fe2   d009     bra     0x001ff6         	BRA	_00161_DS_
                                           _00153_DS_:
                                           ;	.line	62; main.c	case 4: PORTB |= 0x02; break;
001fe4   8281     bsf     0x81, 0x1, 0x0   	BSF	_PORTB, 1
001fe6   d007     bra     0x001ff6         	BRA	_00161_DS_
                                           _00154_DS_:
                                           ;	.line	63; main.c	case 5: PORTB |= 0x01; break;
001fe8   8081     bsf     0x81, 0x0, 0x0   	BSF	_PORTB, 0
001fea   d005     bra     0x001ff6         	BRA	_00161_DS_
                                           _00155_DS_:
                                           ;	.line	64; main.c	case 6: PORTC |= 0x02; break;
001fec   8282     bsf     0x82, 0x1, 0x0   	BSF	_PORTC, 1
001fee   d003     bra     0x001ff6         	BRA	_00161_DS_
                                           _00156_DS_:
                                           ;	.line	65; main.c	case 7: PORTC |= 0x08; break;
001ff0   8682     bsf     0x82, 0x3, 0x0   	BSF	_PORTC, 3
001ff2   d001     bra     0x001ff6         	BRA	_00161_DS_
                                           _00157_DS_:
                                           ;	.line	66; main.c	case 8: PORTC |= 0x10; break;
001ff4   8882     bsf     0x82, 0x4, 0x0   	BSF	_PORTC, 4
                                           _00161_DS_:
                                           ;	.line	67; main.c	}
001ff6   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001ff8   f001
001ffa   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001ffc   f000
001ffe   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002000   ffd9
002002   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__colorSet	code
                                           _colorSet:
                                           ;	.line	41; main.c	void colorSet(char colorAddr) {
002004   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002006   ffe5
002008   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00200a   ffd9
00200c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00200e   ffe5
002010   0e02     movlw   0x02             	MOVLW	0x02
002012   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002014   f000
                                           ;	.line	42; main.c	switch (colorAddr) {
002016   0e09     movlw   0x09             	MOVLW	0x09
002018   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00201a   e23a     bc      0x002090         	BC	_00138_DS_
00201c   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
00201e   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
002020   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
002022   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002024   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
002026   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002028   0bfc     andlw   0xfc             	ANDLW	0xfc
00202a   0f3a     addlw   0x3a             	ADDLW	LOW(_00144_DS_)
00202c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00202e   0e20     movlw   0x20             	MOVLW	HIGH(_00144_DS_)
002030   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
002032   0e00     movlw   0x00             	MOVLW	UPPER(_00144_DS_)
002034   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
002036   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002038   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00144_DS_:
00203a   ef2f     goto    0x00205e         	GOTO	_00128_DS_
00203c   f010
00203e   ef31     goto    0x002062         	GOTO	_00129_DS_
002040   f010
002042   ef34     goto    0x002068         	GOTO	_00130_DS_
002044   f010
002046   ef37     goto    0x00206e         	GOTO	_00131_DS_
002048   f010
00204a   ef3a     goto    0x002074         	GOTO	_00132_DS_
00204c   f010
00204e   ef3d     goto    0x00207a         	GOTO	_00133_DS_
002050   f010
002052   ef40     goto    0x002080         	GOTO	_00134_DS_
002054   f010
002056   ef43     goto    0x002086         	GOTO	_00135_DS_
002058   f010
00205a   ef46     goto    0x00208c         	GOTO	_00136_DS_
00205c   f010
                                           _00128_DS_:
                                           ;	.line	43; main.c	case 0: PORTC = 0x00; break;  //layer 0 red
00205e   6a82     clrf    0x82, 0x0        	CLRF	_PORTC
002060   d017     bra     0x002090         	BRA	_00138_DS_
                                           _00129_DS_:
                                           ;	.line	44; main.c	case 1: PORTA = 0xDF; break;  //layer 1 red
002062   0edf     movlw   0xdf             	MOVLW	0xdf
002064   6e80     movwf   0x80, 0x0        	MOVWF	_PORTA
002066   d014     bra     0x002090         	BRA	_00138_DS_
                                           _00130_DS_:
                                           ;	.line	45; main.c	case 2: PORTA = 0xFB; break;  //layer 2 red
002068   0efb     movlw   0xfb             	MOVLW	0xfb
00206a   6e80     movwf   0x80, 0x0        	MOVWF	_PORTA
00206c   d011     bra     0x002090         	BRA	_00138_DS_
                                           _00131_DS_:
                                           ;	.line	46; main.c	case 3: PORTA = 0xBF; break;  //layer 0 green
00206e   0ebf     movlw   0xbf             	MOVLW	0xbf
002070   6e80     movwf   0x80, 0x0        	MOVWF	_PORTA
002072   d00e     bra     0x002090         	BRA	_00138_DS_
                                           _00132_DS_:
                                           ;	.line	47; main.c	case 4: PORTA = 0xEF; break;  //layer 1 green
002074   0eef     movlw   0xef             	MOVLW	0xef
002076   6e80     movwf   0x80, 0x0        	MOVWF	_PORTA
002078   d00b     bra     0x002090         	BRA	_00138_DS_
                                           _00133_DS_:
                                           ;	.line	48; main.c	case 5: PORTA = 0xFD; break;  //layer 2 green
00207a   0efd     movlw   0xfd             	MOVLW	0xfd
00207c   6e80     movwf   0x80, 0x0        	MOVWF	_PORTA
00207e   d008     bra     0x002090         	BRA	_00138_DS_
                                           _00134_DS_:
                                           ;	.line	49; main.c	case 6: PORTA = 0x7F; break;  //layer 0 blue
002080   0e7f     movlw   0x7f             	MOVLW	0x7f
002082   6e80     movwf   0x80, 0x0        	MOVWF	_PORTA
002084   d005     bra     0x002090         	BRA	_00138_DS_
                                           _00135_DS_:
                                           ;	.line	50; main.c	case 7: PORTA = 0xF7; break;  //layer 1 blue
002086   0ef7     movlw   0xf7             	MOVLW	0xf7
002088   6e80     movwf   0x80, 0x0        	MOVWF	_PORTA
00208a   d002     bra     0x002090         	BRA	_00138_DS_
                                           _00136_DS_:
                                           ;	.line	51; main.c	case 8: PORTA = 0xFE; break;  //layer 2 blue
00208c   0efe     movlw   0xfe             	MOVLW	0xfe
00208e   6e80     movwf   0x80, 0x0        	MOVWF	_PORTA
                                           _00138_DS_:
                                           ;	.line	52; main.c	}
002090   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002092   f000
002094   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002096   ffd9
002098   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__allOff	code
                                           _allOff:
                                           ;	.line	35; main.c	void allOff(void) {
0022fe   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002300   ffe5
002302   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002304   ffd9
                                           ;	.line	36; main.c	PORTA=0xFF;
002306   0eff     movlw   0xff             	MOVLW	0xff
002308   6e80     movwf   0x80, 0x0        	MOVWF	_PORTA
                                           ;	.line	37; main.c	PORTB=0x00;
00230a   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	38; main.c	PORTC=0x01;
00230c   0e01     movlw   0x01             	MOVLW	0x01
00230e   6e82     movwf   0x82, 0x0        	MOVWF	_PORTC
002310   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002312   ffd9
002314   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__delay_ms	code
                                           _delay_ms:
                                           ;	.line	28; main.c	void delay_ms(uint16_t iterations) {
00212a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00212c   ffe5
00212e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002130   ffd9
002132   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002134   ffe5
002136   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002138   ffe5
00213a   0e02     movlw   0x02             	MOVLW	0x02
00213c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00213e   f000
002140   0e03     movlw   0x03             	MOVLW	0x03
002142   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002144   f001
                                           ;	.line	30; main.c	for (i = iterations*100; i > 0; i--) {
002146   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002148   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00214a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00214c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00214e   0e00     movlw   0x00             	MOVLW	0x00
002150   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002152   0e64     movlw   0x64             	MOVLW	0x64
002154   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002156   ec66     call    0x001ecc, 0x0call    0x001ecc, 0x0 	CALL	__mulint
002158   f00f
00215a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00215c   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
00215e   f001
002160   0e04     movlw   0x04             	MOVLW	0x04
002162   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00116_DS_:
002164   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002166   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
002168   e005     bz      0x002174         	BZ	_00118_DS_
00216a   0000     nop                      	nop	
                                           ;	.line	30; main.c	for (i = iterations*100; i > 0; i--) {
00216c   0eff     movlw   0xff             	MOVLW	0xff
00216e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002170   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002172   d7f8     bra     0x002164         	BRA	_00116_DS_
                                           _00118_DS_:
002174   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002176   f001
002178   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00217a   f000
00217c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00217e   ffd9
002180   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__delay_us	code
                                           _delay_us:
                                           ;	.line	21; main.c	void delay_us(uint16_t iterations) {
002214   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002216   ffe5
002218   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00221a   ffd9
00221c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00221e   ffe5
002220   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002222   ffe5
002224   0e02     movlw   0x02             	MOVLW	0x02
002226   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002228   f000
00222a   0e03     movlw   0x03             	MOVLW	0x03
00222c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00222e   f001
                                           _00107_DS_:
                                           ;	.line	23; main.c	for (i = iterations; i > 0; i--) {
002230   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002232   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
002234   e005     bz      0x002240         	BZ	_00109_DS_
002236   0000     nop                      	nop	
                                           ;	.line	23; main.c	for (i = iterations; i > 0; i--) {
002238   0eff     movlw   0xff             	MOVLW	0xff
00223a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00223c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00223e   d7f8     bra     0x002230         	BRA	_00107_DS_
                                           _00109_DS_:
002240   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002242   f001
002244   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002246   f000
002248   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00224a   ffd9
00224c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _delaySpeed:
002342   000a     tblrd*-                  	DB	0x0a, 0x00
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 6636 (0x19ec) bytes ( 5.06%)
                                           ;           	 3318 (0x0cf6) words
                                           ; udata size:	   90 (0x005a) bytes ( 7.03%)
                                           ; access size:	   15 (0x000f) bytes
                                           
                                           
                                           	end
